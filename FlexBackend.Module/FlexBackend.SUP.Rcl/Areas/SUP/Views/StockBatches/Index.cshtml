@* StockBatches Index *@
@{
    ViewData["Title"] = "庫存管理";
}

@section Styles {
    <link rel="stylesheet" href="~/_content/FlexBackend.SUP.Rcl/css/supstylesheet.css" />
}

<div class="stockbatch-card">
    <button id="createStockBatchBtn" class="btn btn-outline-success">新增庫存</button>
    <div class="legend">
        <span><span class="dot danger"></span> 危險（低於安全庫存）</span>
        <span><span class="dot low"></span> 須補貨（低於再訂購點）</span>
        <span><span class="dot normal"></span> 正常</span>
    </div>
    <table id="stockBatchTable" class="display" style="width:100%">
        <thead>
            <tr>
                <th>SKU</th>
                <th>批號</th>
                <th>品牌</th>
                <th>商品</th>
                <th>到期日</th>
                <th>庫存量</th>
                <th>再訂購點</th>
                <th>安全庫存</th>
                <th>規格</th>
                <th>操作</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>

<!-- Modal -->
<div id="stockBatchModal" class="modal fade" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content bg-white container">
            <!-- Header -->
            <div class="modal-header">
                <h5 id="stockBatchModalTitle" class="modal-title">庫存</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>

            <!-- Body -->
            <div id="stockBatchModalContent" class="modal-body p-4">
                <!-- AJAX 載入 _StockBatchFormPartial -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {

            // ======= 從 sessionStorage 拿到初始品牌名稱 =======
            var initialBrandName = sessionStorage.getItem('selectedBrandName') || '';
            // 初始化完就清掉，避免刷新又填入
            sessionStorage.removeItem('selectedBrandName');

            // ======= 定義 selectedSupplierId =======
            var selectedSupplierId = ''; // 預設空，可視需求改成從 ViewBag 拿

            // ======= 初始化庫存 DataTable =======
            var stockBatchTable = $('#stockBatchTable').DataTable({
                serverSide: true,
                processing: true,
                ajax: {
                    url: '/SUP/StockBatches/IndexJson',
                    type: 'POST',
                    data: function(d) {
                        d.supplierId = selectedSupplierId; // 傳給 IndexJson
                    },
                    dataSrc: function(json) {
                        console.log(json);      // 印出整個 JSON
                        console.log(json.data); // 印出每筆 row
                        return json.data;
                    }
                },
                columns: [
                    { data: 'skuCode', title: 'SKU', className: 'text-center'},
                    { data: 'batchNumber', title: '批號', className: 'text-center'},
                    { data: 'brandName', title: '品牌', className: 'text-center'},
                    { data: 'productName', title: '商品名稱', className: 'text-center'},
                    {
                        data: 'expireDate',
                        title: '到期日',
                        render: function(data) {
                            if (!data) return '無';
                            let date = new Date(data);
                            let today = new Date();
                            let formatted = date.toLocaleDateString('zh-TW');

                            if (date < today.setHours(0,0,0,0)) {
                                return `<span class="text-danger">${formatted} (已過期)</span>`;
                            }
                            return formatted;
                        }
                    },
                    {
                        data: 'qty', title: '庫存量',
                        render: function (data, type, row) {
                            let stock = parseInt(data);
                            let reorder = parseInt(row.reorderPoint);
                            let safety = parseInt(row.safetyStockQty);

                            if (stock <= safety) {
                                return `<span class="stock-danger" data-bs-toggle="tooltip" title="低於安全庫存"><i class="fa-solid fa-triangle-exclamation" style="color: #e66774;"></i>${stock}</span>`;
                            } else if (stock <= reorder) {
                                return `<span class="stock-low" data-bs-toggle="tooltip" title="庫存低於再訂購點"><i class="fa-solid fa-circle-exclamation" style="color: #f9d66f;"></i>${stock}</span>`;
                            }
                            return `<span class="stock-normal" data-bs-toggle="tooltip" title="庫存正常">${stock}</span>`;
                        }
                    },
                    { data: 'reorderPoint', title: '再訂購點' },
                    { data: 'safetyStockQty', title: '安全庫存' },
                    {
                        data: 'specifications',
                        className: 'text-center',
                        title: '規格',
                        render: function(data) {
                            if(!data) return '';
                            return data.map(s => s.groupName + ':' + s.optionName).join(' / ');
                        }
                    },
                    {
                        data: 'stockBatchId',
                        title: '操作',
                        orderable: false,
                        render: function(data, type, row) {
                            return `
                                <button class="btn btn-sm edit-stock-btn" data-id="${data}" data-bs-toggle="tooltip" title="庫存異動">
                                    <i class="fa-solid fa-pen-to-square" style="color: #9073e8;"></i>
                                </button>
                                <button class="btn btn-sm stock-history-btn" data-brandid="${row.BrandCode}" data-bs-toggle="tooltip" title="異動紀錄">
                                    <i class="fa-solid fa-clock-rotate-left" style="color: #1c7ed6;"></i>
                                </button>
                            `;
                        }
                    }
                ],
                scrollY: "500px",
                scrollCollapse: true,
                colReorder: true,
                columnDefs: [
                    { targets: '_all', type: 'string' }
                ],
                language: {
                    url: '//cdn.datatables.net/plug-ins/2.3.3/i18n/zh-HANT.json',
                    processing: '<i class="fa-solid fa-dog fa-bounce fa-3x"></i>'
                },
                initComplete: function(settings, json) {
                    // ===== 自動填入搜尋品牌名稱 =====
                    if (initialBrandName) {
                        var searchInput = $('#dt-search-0');
                        searchInput.val(initialBrandName).trigger('input');
                        stockBatchTable.search(initialBrandName).draw();

                        Swal.fire({
                            icon: 'info',
                            title: '已篩選',
                            text: `目前顯示供應商 "${initialBrandName}" 的品牌庫存`,
                            timer: 2000,
                            showConfirmButton: false
                        });
                    }
                    // 初始化 tooltip
                    $('[data-bs-toggle="tooltip"]').each(function() {
                        new bootstrap.Tooltip(this);
                    });
                }
            });

            // 每次 redraw 都重新初始化 tooltip
            stockBatchTable.on('draw', function() {
                $('[data-bs-toggle="tooltip"]').each(function() {
                    new bootstrap.Tooltip(this);
                });
            });

            // ===== 搜尋欄清空時重置 =====
            $('#dt-search-0').on('input', function() {
                if ($(this).val() === '') {
                    stockBatchTable.search('').draw();
                }
            });

            // ===== 新增庫存按鈕 =====
            $('#createStockBatchBtn').on('click', function () {
                $.get('/SUP/StockBatches/Create', function(html){
                    $('#stockBatchModalContent').html(html);
                    $('#stockBatchModalTitle').text("新增庫存");
                    $('#stockBatchModal').modal('show');

                    if(window.initStockBatchForm) window.initStockBatchForm();
                });
            });

            // ===== 編輯庫存 =====
            $('#stockBatchTable').on('click', '.edit-stock-btn', function() {
                var id = $(this).data('id');
                $.get(`/SUP/StockBatches/Edit/${id}`, function(html){
                    $('#stockBatchModalContent').html(html);
                    $('#stockBatchModalTitle').text("庫存量異動");
                    $('#stockBatchModal').modal('show');

                    var selectedBrandId = $('#SelectedBrandId').val() || null;
                    var selectedProductId = $('#SelectedProductId').val() || null;
                    var selectedSkuId = $('#SelectedSkuId').val() || null;
                    if(window.initStockBatchForm) window.initStockBatchForm(selectedBrandId, selectedProductId, selectedSkuId);
                });
            });

            // ===== 異動紀錄按鈕 =====
            $('#stockBatchTable').on('click', '.stock-history-btn', function() {
                var brandCode = $(this).data('brandid');
                window.location.href = `/SUP/StockBatches/History?brandCode=${brandCode}`;
            });

            // ===== 新增 & 更新庫存表單提交 =====
            $('#stockBatchModalContent').off('submit', '#stockBatchForm').on('submit', '#stockBatchForm', function (e) {
                e.preventDefault();
                var form = $(this);
                var formData = new FormData(form[0]);

                if ($('#MovementTypeSelect').val() === 'Adjust') {
                    formData.set('IsAdd', $('#AdjustTypeSelect').val() === 'true');
                }

                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]', form).val()
                    },
                    success: function(res){
                        if(res.success){
                            $('#stockBatchModal').modal('hide');
                            Swal.fire({
                                position: 'center',
                                icon: 'success',
                                title: res.message || '操作成功',
                                showConfirmButton: false,
                                timer: 1200
                            });
                            stockBatchTable.ajax.reload(null, false);
                        } else {
                            Swal.fire('操作失敗', res.message || '資料格式錯誤', 'error');
                        }
                    },
                    error: function(){
                        Swal.fire('操作失敗', '', 'error');
                    }
                });
            });

        });
    </script>
}
