@* Index.cshtml → 文章列表 *@

@using X.PagedList
@using X.PagedList.Mvc.Core

@model X.PagedList.IPagedList<FlexBackend.CNT.Rcl.Areas.CNT.ViewModels.PageListVM>


<div class="card shadow-sm border-0">
    <div class="card-header bg-primary text-white fw-bold">
        📑 文章列表
    </div>
    <div class="card-body">
        <table class="table table-striped table-bordered table-hover align-middle shadow-sm">
            <thead class="table-dark">
                <tr>
                    <th>ID</th>
                    <th>📄 標題</th>
                    <th>📌 狀態</th>
                    <th>⏰ 建立日期</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var page in Model)
            {
                <tr>
                    <td>page.PageId</td>
                    <td>page.Title</td>
                    <td>
                        <span class="badge rounded-pill px-3 py-2
                            @(page.Status == "1" ? "bg-success" : 
                              page.Status == "0" ? "bg-secondary" :
                              page.Status == "2" ? "bg-warning text-dark" :
                              "bg-danger")">
                            page.StatusText
                        </span>
                    </td>
                    <td>page.CreatedDate.ToString("yyyy-MM-dd HH:mm")</td>
                </tr>
            }
            </tbody>
        </table>
    </div>
    <div class="card-footer">
        <div class="d-flex justify-content-center">
            @Html.PagedListPager(
            Model,
            page => Url.Action("Index", new { page }),
                        new PagedListRenderOptions
                        {
                            DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                            DisplayLinkToLastPage = PagedListDisplayMode.Always,
                            DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                            DisplayLinkToNextPage = PagedListDisplayMode.Always,
                            UlElementClasses = new[] { "pagination" },
                            LiElementClasses = new[] { "page-item" },
                            PageClasses = new[] { "page-link" }
                        }
                        )
        </div>
    </div>
</div>
