@model FlexBackend.CNT.Rcl.Areas.CNT.ViewModels.PageBlockEditVM
@{
    ViewData["Title"] = "新增區塊";
}
@section Styles
{

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">@* 浮動按鈕樣式*@

    <style>
        .fab-btn {
            position: fixed;
            bottom: 36px;
            right: 36px;
            width: 108px; /* 基本大小 */
            height: 108px;
            font-size: 36px; /* icon 放大 */
            display: flex;
            align-items: center;
            justify-content: center;
            transition: transform 0.25s ease, background-color 0.25s ease, box-shadow 0.25s ease;
            border: none;
            z-index: 1000; /* 確保浮在最上層 */
        }

        .fab-icon {
            color: #f8f9fa; /* 預設淡白 */
            transition: color 0.25s ease, transform 0.25s ease;
        }

        .fab-btn:hover .fab-icon {
            color: #ffffff; /* icon 變純白 */
            transform: rotate(180deg);
        }
        /* Hover 時放大 */
        .fab-btn:hover {
            background-color: mediumspringgreen;
            transform: scale(1.4); /* 放大到 140% */
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.35);
        }
    </style>
    <style>
        .preview-title {
            all: unset;
            font-size: 24px;
            font-weight: bold;
        }

        .preview-box {
            border: 3px solid #ccc;
            border-radius: 12px;
            padding: 0 28px 0 28px;
            height: 720px;
            background: #f9f9f9;
            white-space: pre-wrap; /* 保留換行符號 */
            overflow-y: auto; /* 超過高度時出現捲軸 */
            overflow-wrap: break-word; /* 新版推薦 */
        }

        .preview-content {
            border-radius: 8px;
            border: 2px solid #ccc;
            background-color: rgb(255, 255, 255);
            height: 540px;
            overflow-y: auto; /* 超過就出現捲軸 */
            padding: 12px
        }

    </style>

}

<h3 class="mb-3">新增區塊</h3>

<form asp-action="Add" method="post" enctype="multipart/form-data">
    <input type="hidden" asp-for="PageId" />
    <div class="mb-3">
        <label class="form-label">區塊類型</label>
        <select asp-for="BlockType" class="form-select" id="blockType">
            <option value="richtext">RichText</option>
            <option value="image">Image</option>
        </select>
    </div>

    <div class="mb-3" id="rtBox">
        <label class="form-label">內容（RichText HTML）</label>
        <textarea asp-for="Content" class="form-control" rows="8" id="editor"></textarea>
        <span class="text-muted small">可先用純文字／HTML；之後再接 CKEditor。</span>
    </div>

    <div class="mb-3 d-none" id="imgBox">
        <label class="form-label">上傳圖片（暫存到 /uploads，URL 放在 Content）</label>
        <input type="file" name="imageFile" class="form-control" accept="image/*" />
    </div>

    <div class="mb-3">
        <label class="form-label">順序（OrderSeq）</label>
        <input asp-for="OrderSeq" type="number" class="form-control" />
    </div>

    <div class="d-flex gap-2">
        <button class="btn btn-success" type="submit">新增</button>
        <a asp-area="CNT" asp-controller="Pages" asp-action="Edit" asp-route-id="@Model.PageId" class="btn btn-secondary">回文章</a>
    </div>

    <hr />
    <h5>✏️ 新增第一個內容區塊</h5>
    <!-- 浮動新增按鈕 -->
    <a asp-controller="PageBlocks" asp-action="Create" asp-route-pageId="@Model.PageId"
       class="btn btn-success rounded-circle shadow-lg fab-btn"
       data-bs-toggle="tooltip" data-bs-placement="left" title="新增內容區塊">
        <i class="bi bi-file-earmark-plus fab-icon"></i>
    </a>

    <div class="mb-3">
        <label asp-for="NewBlockType" class="form-label">區塊類型</label>
        <select asp-for="NewBlockType" class="form-select">
            <option value="richtext">文字區塊</option>
            <option value="image">圖片區塊</option>
        </select>
    </div>


    <br />
    <div style="display:flex;gap:20px;">
        <div class="col-md-6">
            <!-- 富文本編輯器 -->
            <textarea id="editor" asp-for="NewBlockContent"></textarea>
            <span asp-validation-for="NewBlockContent" class="text-danger"></span>
            <!-- 字數統計容器（放 textarea 下面） -->
            <div id="editor-word-count" class="text-muted small mt-1"></div>
            <!-- 送出按鈕 -->
            @* <button type="submit" class="btn btn-primary mt-2">送出</button> *@
        </div>
        <div class="col-md-6 preview-box">
            <!-- 即時預覽 -->
            <h3 class="preview-title">即時預覽</h3>
            <div id="live-preview" class="preview-content"></div>
        </div>
    </div>
</form>

@section Scripts {
    <script>
        const sel = document.getElementById('blockType');
        const rt = document.getElementById('rtBox');
        const img = document.getElementById('imgBox');
        function toggleBox(){
          if(sel.value === 'image'){ rt.classList.add('d-none'); img.classList.remove('d-none'); }
          else { img.classList.add('d-none'); rt.classList.remove('d-none'); }
        }
        sel.addEventListener('change', toggleBox);
        toggleBox();
    </script>

    <script src="https://cdn.tiny.cloud/1/r5667x13d0hhddtzkecsjtxy7i4xdtrx1p7nyscygxet0ht0/tinymce/8/tinymce.min.js"
            referrerpolicy="origin" crossorigin="anonymous"></script>

    <script>
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    </script>

    <script>
              // 取得 Anti-forgery Token（若你的表單有 @Html.AntiForgeryToken()）
            const antiForgeryToken = document.querySelector('input[name="__RequestVerificationToken"]')?.value;
            const placeholders = [
              "「用文字征服世界。」",
              "「寫吧，這裡是你的戰場！」",
              "「別怕，打錯字不會被扣薪水。」",
              "「用文字征服世界。」",
              "「字越多，力量越大。」",
              "「來，發表你的偉大言論。」",
              "「這裡可以容納你的一切靈感，除了你昨晚的爛笑話。」",
              "「不管是生旦淨末丑，跑龍套也能讓你激昂，寧願捨一頓飯也聽你唱。」",
              "「這是一首簡單的小情歌，唱著我們心頭的白鴿。」",
              "「想說好多話，可不知從何說起？」",
              "「想說好多話，可不知從何說起？」",
              "「想說好多話，可不知從何說起？」",
              "「想說好多話，可不知從何說起？」"
            ];
            // 隨機挑選一個
            const randomPlaceholder = placeholders[Math.floor(Math.random() * placeholders.length)];

            tinymce.init({
               selector: '#editor',
                height: 600,              // ✅ 固定高度
                placeholder: randomPlaceholder,   // ✅ 隨機 placeholder
                content_style: `
                body.mce-content-body[data-mce-placeholder]:empty::before {
                font-size: 20px !important;
                font-style: italic;
                color: #e63946;}`,
                menubar: true,
                statusbar: true,          // ✅ 保留底部狀態列
                resize: true,            // ❌ 禁止使用者手動拖曳高度

              // 重要：啟用圖片/影片/emoji 相關外掛
              plugins: 'image media emoticons link lists table code wordcount preview',

              // 工具列加入：圖片、媒體、Emoji
              toolbar: 'undo redo | bold italic underline | link image media emoticons | bullist numlist | table | code | wordcount | preview',
              // 讓「插入媒體」對話框支援貼 YouTube/Vimeo 連結（media 外掛會處理 <iframe>）
              media_live_embeds: true,

              // 限制可挑選的檔案類型（選配）
              file_picker_types: 'image media',

              // ✅ 圖片上傳：兩種做法擇一
              // A. 最簡：靠 images_upload_url（TinyMCE 自動用 multipart/form-data 上傳「file」欄位）
              images_upload_url: '/upload/image',

              // B. (可選) 自訂 handler：自己用 fetch 加上 CSRF 標頭與進度回報
              images_upload_handler: async (blobInfo, progress) => {
                const form = new FormData();
                form.append('file', blobInfo.blob(), blobInfo.filename());

                const resp = await fetch('/upload/image', {
                  method: 'POST',
                  body: form,
                  headers: antiForgeryToken ? { 'RequestVerificationToken': antiForgeryToken } : {}
                });

                const json = await resp.json();
                if (!resp.ok || !json?.location) {
                  throw new Error(json?.message || 'Image upload failed');
                }
                return json.location; // TinyMCE 需要回傳圖片 URL
              },

              // ✅ 影片上傳：用 file_picker_callback 把檔案丟到 /upload/media，回傳 URL 後插入 <video> 或 <iframe>
              file_picker_callback: async (callback, value, meta) => {
                // meta.filetype 可能是 'image' 或 'media'
                if (meta.filetype !== 'image' && meta.filetype !== 'media') return;

                const input = document.createElement('input');
                input.type = 'file';
                input.accept = meta.filetype === 'image'
                  ? 'image/*'
                  : 'video/mp4,video/webm,video/ogg';   // 你要支援的影片格式

                input.onchange = async () => {
                  const file = input.files[0];
                  const form = new FormData();
                  form.append('file', file);

                  const url = meta.filetype === 'image' ? '/upload/image' : '/upload/media';

                  const resp = await fetch(url, {
                    method: 'POST',
                    body: form,
                    headers: antiForgeryToken ? { 'RequestVerificationToken': antiForgeryToken } : {}
                  });

                  const json = await resp.json();
                  if (!resp.ok || !json?.location) {
                    alert(json?.message || 'Upload failed');
                    return;
                  }

                  // image：直接回傳 URL
                  // media：可回傳 video URL，TinyMCE 會放到「插入媒體」對話框
                  callback(json.location, { title: file.name });
                };
                input.click();
              },

              // Emoji（表情符號）
              // 只要有 emoticons 外掛與工具列按鈕，就能插入 emoji

            setup: (editor) => {

            const box = document.getElementById('editor-word-count');

            const render = () => {
                // 取純文字、去掉前後空白
                const text = (editor.getContent({ format: 'text' }) || '').trim();

                // 1) 中文字元：使用 Unicode Script=Han 抓取中日韓統一表意文字（常用中文字）
                const zhMatches = text.match(/[\p{Script=Han}]/gu) || [];
                const zhCount = zhMatches.length;

                // 2) 英文字母（A–Z / a–z）
                const enMatches = text.match(/[A-Za-z]/g) || [];
                const enCount = enMatches.length;

                // 3) 總字元數（不含任何空白）
                const total = text.replace(/\s/g, '').length;

                // 4) 其他字元 = 總字元數 − 中文 − 英文（包含數字、標點、符號、emoji…）
                const otherCount = Math.max(total - zhCount - enCount, 0);
                // 輸出到下方區塊（你也可以改成單行顯示）
                    box.innerHTML = `
                        <ul style="list-style:none;padding:0;margin:0;">
                          <li>🀄 中文字元：<strong>${zhCount}</strong></li>
                          <li>🔤 英文字母：<strong>${enCount}</strong></li>
                          <li>✨ 其他字元：<strong>${otherCount}</strong></li>
                          <li>📊 總字元（不含空白）：<strong>${total}</strong></li>
                        </ul>
                    `;
                    };

                // 初始化與變更時都更新
                editor.on('init keyup change setcontent', render);
                // 即時預覽：監聽編輯器變動
                editor.on('init keyup change setcontent', () => {
                document.getElementById('live-preview').innerHTML = editor.getContent();
                 });
            }
        });

    </script>
}
