@{
    ViewData["Title"] = "員工管理";
}

@{
    ViewData["Title"] = "員工管理";
}

@section Styles {
    <link rel="stylesheet" href="//cdn.datatables.net/2.3.3/css/dataTables.dataTables.min.css" />
}

<div class="d-flex flex-wrap gap-2 align-items-center mb-3">
    <div class="me-2">
        <label class="form-label me-1">角色篩選</label>
        <select id="roleFilter" class="form-select form-select-sm d-inline-block" style="width:220px">
            <option value="">（全部非 Member 員工）</option>
        </select>
    </div>
    <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#dlgCreate">
        新增員工
    </button>
</div>

<div class="card shadow">
    <div class="card-header">員工列表</div>
    <div class="card-body">
        <table id="tblUsers" class="table table-striped w-100">
            <thead>
                <tr>
                    <th>員編</th>
                    <th>姓</th>
                    <th>名</th>
                    <th>Email</th>
                    <th>電話</th>
                    <th>角色</th>
                    <th>啟用</th>
                    <th>建立時間</th>
                    <th>操作</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

<!-- 新增員工 Modal -->
<div class="modal fade" id="dlgCreate" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">新增員工</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="frmCreate" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <div class="row g-2">
                        <div class="col-6">
                            <label class="form-label">姓</label>
                            <input name="lastName" class="form-control" required />
                        </div>
                        <div class="col-6">
                            <label class="form-label">名</label>
                            <input name="firstName" class="form-control" required />
                        </div>
                        <div class="col-12">
                            <label class="form-label">Email</label>
                            <input name="email" type="email" class="form-control" required />
                        </div>
                        <div class="col-12">
                            <label class="form-label">電話</label>
                            <input name="phone" class="form-control" />
                        </div>
                        <div class="col-12">
                            <label class="form-label">角色</label>
                            <select name="roleId" id="createRoleId" class="form-select" required></select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" type="submit">建立</button>
                    <button class="btn btn-outline-secondary" type="button" data-bs-dismiss="modal">關閉</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- ★ 詳細資料 Modal -->
<div class="modal fade" id="dlgDetails" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">員工詳細資料</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="frmDetails" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" id="det_id" />
                <div class="modal-body">
                    <div class="row g-3">
                        <div class="col-md-3">
                            <label class="form-label">員編</label>
                            <input id="det_number" class="form-control" disabled />
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">姓</label>
                            <input name="lastName" id="det_lastName" class="form-control" required />
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">名</label>
                            <input name="firstName" id="det_firstName" class="form-control" required />
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">角色</label>
                            <select name="roleId" id="det_roleId" class="form-select" required></select>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Email</label>
                            <input name="email" id="det_email" type="email" class="form-control" required />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">電話</label>
                            <input name="phoneNumber" id="det_phone" class="form-control" />
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">性別</label>
                            <select name="gender" id="det_gender" class="form-select">
                                <option value="N/A">N/A</option>
                                <option value="Male">男</option>
                                <option value="Female">女</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">生日</label>
                            <input name="birthDate" id="det_birth" type="date" class="form-control" />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">地址</label>
                            <input name="address" id="det_addr" class="form-control" />
                        </div>
                        <div class="col-12">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="det_active">
                                <label class="form-check-label" for="det_active">啟用</label>
                            </div>
                            <input type="hidden" name="isActive" id="det_active_hidden" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" type="submit">儲存</button>
                    <button class="btn btn-outline-secondary" type="button" data-bs-dismiss="modal">關閉</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="//cdn.datatables.net/2.3.3/js/dataTables.min.js"></script>
    <script>
        let rolesCache = [];

        function escapeHtml(s){ return (s??"").replace(/[&<>"']/g, m=>({ "&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;" }[m])); }
        function getAntiForgeryToken(){
          return document.querySelector('input[name="__RequestVerificationToken"]')?.value || '';
        }

        // 載入角色下拉（篩選＋建立＋詳細用）
        async function loadRoles(){
          const res = await fetch('/USER/Admins/RolesCombo');
          rolesCache = await res.json();
          const filter = document.getElementById('roleFilter');
          const createSel = document.getElementById('createRoleId');
          const detSel = document.getElementById('det_roleId');
          rolesCache.forEach(r=>{
            filter.insertAdjacentHTML('beforeend', `<option value="${r.id}">${escapeHtml(r.name)}</option>`);
            createSel.insertAdjacentHTML('beforeend', `<option value="${r.id}">${escapeHtml(r.name)}</option>`);
            detSel.insertAdjacentHTML('beforeend', `<option value="${r.id}">${escapeHtml(r.name)}</option>`);
          });
        }
        loadRoles();

        // 角色選單 HTML（表格用）
        function roleSelectHtml(userId, selectedId){
          const opts = rolesCache.map(r=>`<option value="${r.id}" ${r.id===selectedId?'selected':''}>${escapeHtml(r.name)}</option>`).join('');
          return `<select class="form-select form-select-sm role-select" data-id="${userId}">${opts}</select>`;
        }

        // 啟用切換 HTML
        function activeSwitchHtml(userId, isActive){
          return `<input type="checkbox" class="form-check-input form-switch is-active" data-id="${userId}" ${isActive?'checked':''}>`;
        }

        const dt = new DataTable('#tblUsers', {
          processing: true, serverSide: true,
          ajax: {
            url: '/USER/Admins/Users',
            type: 'GET',
            dataSrc: 'data',
            data: function(d){ d.roleId = document.getElementById('roleFilter').value; }
          },
          searchDelay: 400,
          columns: [
            { data: 'number' },
            { data: 'lastName',
              render: (d, t, row)=> `<span class="editable" data-id="${row.id}" data-field="lastName" contenteditable="false">${escapeHtml(d)}</span>` },
            { data: 'firstName',
              render: (d, t, row)=> `<span class="editable" data-id="${row.id}" data-field="firstName" contenteditable="false">${escapeHtml(d)}</span>` },
            { data: 'email',
              render: (d, t, row)=> `<span class="editable" data-id="${row.id}" data-field="email" contenteditable="false">${escapeHtml(d)}</span>` },
            { data: 'phoneNumber',
              render: (d, t, row)=> `<span class="editable" data-id="${row.id}" data-field="phoneNumber" contenteditable="false">${escapeHtml(d)}</span>` },
            { data: 'roleId', orderable:false,
              render: (d, t, row)=> roleSelectHtml(row.id, d) },
            { data: 'isActive',
              render: (d, t, row)=> activeSwitchHtml(row.id, d), className:'text-center' },
            { data: 'createdDate' },
            { data: null, orderable:false, searchable:false,
              render: (d,t,row)=> `
                <div class="btn-group btn-group-sm">
                  <button class="btn btn-outline-primary btn-detail" data-id="${row.id}">詳細</button>
                  <button class="btn btn-outline-danger btn-del" data-id="${row.id}">刪除</button>
                </div>`
            }
          ],
          order: [[7,'desc']]
        });

        // 角色篩選變更 -> reload
        document.getElementById('roleFilter').addEventListener('change', ()=> dt.ajax.reload());

        // 編輯：雙擊可編輯；Enter/blur 送出
        document.addEventListener('dblclick', e=>{
          const el = e.target.closest('.editable'); if(!el) return;
          el.setAttribute('contenteditable','true'); el.focus();
          const rng = document.createRange(); rng.selectNodeContents(el); rng.collapse(false);
          const sel = window.getSelection(); sel.removeAllRanges(); sel.addRange(rng);
        });

        async function saveEditable(el){
          const userId = el.dataset.id, field = el.dataset.field, value = el.textContent.trim();
          el.setAttribute('contenteditable','false');
          const fd = new FormData(); fd.append('userId', userId); fd.append('field', field); fd.append('value', value);
          const res = await fetch('/USER/Admins/UpdateField', {
            method:'POST', body: fd,
            headers: { 'RequestVerificationToken': getAntiForgeryToken() },
            credentials: 'same-origin'
          });
          const json = await res.json().catch(()=>({ ok:false }));
          if(!(res.ok && json.ok)){ alert(json.message || '更新失敗'); dt.ajax.reload(null, false); }
        }
        document.addEventListener('keydown', e=>{
          const el = e.target.closest('.editable'); if(!el) return;
          if(e.key==='Enter'){ e.preventDefault(); saveEditable(el); }
        });
        document.addEventListener('blur', e=>{
          const el = e.target.closest('.editable'); if(!el) return;
          if(el.getAttribute('contenteditable')==='true') saveEditable(el);
        }, true);

        // 啟用切換
        document.addEventListener('change', async (e)=>{
          const sw = e.target.closest('.is-active'); if(!sw) return;
          const fd = new FormData(); fd.append('userId', sw.dataset.id); fd.append('field','isActive'); fd.append('value', sw.checked?'true':'false');
          const res = await fetch('/USER/Admins/UpdateField', {
            method:'POST', body: fd,
            headers: { 'RequestVerificationToken': getAntiForgeryToken() },
            credentials: 'same-origin'
          });
          const json = await res.json().catch(()=>({ ok:false }));
          if(!(res.ok && json.ok)){ alert(json.message || '更新失敗'); dt.ajax.reload(null, false); }
        });

        // 角色變更
        document.addEventListener('change', async (e)=>{
          const sel = e.target.closest('.role-select'); if(!sel) return;
          const fd = new FormData(); fd.append('userId', sel.dataset.id); fd.append('roleId', sel.value);
          const res = await fetch('/USER/Admins/ChangeRole', {
            method:'POST', body: fd,
            headers: { 'RequestVerificationToken': getAntiForgeryToken() },
            credentials: 'same-origin'
          });
          const json = await res.json().catch(()=>({ ok:false }));
          if(!(res.ok && json.ok)){ alert(json.message || '變更角色失敗'); dt.ajax.reload(null, false); }
        });

        // ★ 詳細：開啟並載入
        document.addEventListener('click', async (e)=>{
          const btn = e.target.closest('.btn-detail'); if(!btn) return;
          const id = btn.dataset.id;
          const res = await fetch(`/USER/Admins/Details?id=${encodeURIComponent(id)}`);
          if(!res.ok){ alert('讀取詳細資料失敗'); return; }
          const d = await res.json();

          // 填值
          document.getElementById('det_id').value = d.id;
          document.getElementById('det_number').value = d.number ?? '';
          document.getElementById('det_lastName').value = d.lastName ?? '';
          document.getElementById('det_firstName').value = d.firstName ?? '';
          document.getElementById('det_email').value = d.email ?? '';
          document.getElementById('det_phone').value = d.phoneNumber ?? '';
          document.getElementById('det_gender').value = d.gender ?? 'N/A';
          document.getElementById('det_birth').value = d.birthDate ?? '';
          document.getElementById('det_addr').value = d.address ?? '';
          document.getElementById('det_active').checked = !!d.isActive;
          document.getElementById('det_roleId').value = d.roleId ?? '';

          new bootstrap.Modal(document.getElementById('dlgDetails')).show();
        });

        // ★ 詳細：儲存
        document.getElementById('frmDetails').addEventListener('submit', async (e)=>{
          e.preventDefault();
          // 將 checkbox 帶到 hidden 欄位
          document.getElementById('det_active_hidden').value = document.getElementById('det_active').checked ? 'true' : 'false';

          const fd = new FormData(e.target);
          const res = await fetch('/USER/Admins/UpdateDetails', {
            method:'POST', body: fd,
            headers: { 'RequestVerificationToken': getAntiForgeryToken() },
            credentials: 'same-origin'
          });
          const json = await res.json().catch(()=>({ ok:false }));
          if(res.ok && json.ok){
            bootstrap.Modal.getInstance(document.getElementById('dlgDetails')).hide();
            dt.ajax.reload(null, false);
          }else{
            alert(json.message || '儲存失敗');
          }
        });

        // ★ 刪除
        document.addEventListener('click', async (e)=>{
          const btn = e.target.closest('.btn-del'); if(!btn) return;
          if(!confirm('確定要刪除此員工？')) return;
          const id = btn.dataset.id;
          const fd = new FormData(); fd.append('userId', id);
          const res = await fetch('/USER/Admins/Delete', {
            method:'POST', body: fd,
            headers: { 'RequestVerificationToken': getAntiForgeryToken() },
            credentials: 'same-origin'
          });
          const json = await res.json().catch(()=>({ ok:false }));
          if(res.ok && json.ok){
            dt.ajax.reload(null, false);
          }else{
            alert(json.message || '刪除失敗');
          }
        });

        // 新增員工
        document.getElementById('frmCreate').addEventListener('submit', async (e)=>{
          e.preventDefault();
          const form = e.target;
          const fd = new FormData(form);
          const res = await fetch('/USER/Admins/Create', {
            method:'POST', body: fd,
            headers: { 'RequestVerificationToken': getAntiForgeryToken() },
            credentials: 'same-origin'
          });
          const json = await res.json().catch(()=>({ ok:false }));
          if(res.ok && json.ok){
            bootstrap.Modal.getInstance(document.getElementById('dlgCreate')).hide();
            form.reset();
            dt.ajax.reload(null, false);
          }else{
            alert(json.message || '建立失敗');
          }
        });
    </script>
}