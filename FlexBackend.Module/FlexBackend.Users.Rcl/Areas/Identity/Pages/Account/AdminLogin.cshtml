@page
@using Microsoft.Extensions.Hosting
@model AdminLoginModel
@inject Microsoft.Extensions.Configuration.IConfiguration Config
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment Env

@{
    ViewData["Title"] = "tHerd員工登入";
    // 從 secrets.json 讀取（並 Trim 避免尾端空白）
    var superEmail = (Config["SuperAdminAccount"] ?? "").Trim();
    var superPwd = (Config["SuperAdminPassword"] ?? "").Trim();

    var modEmail = (Config["ModuleAdminAccount"] ?? "").Trim();
    var modPwd = (Config["ModuleAdminPassword"] ?? "").Trim();

    var chienEmail = (Config["ChienAccount"] ?? "").Trim();
    var chienPwd = (Config["ChienPassword"] ?? "").Trim();
}

<h1>@ViewData["Title"]</h1>
<div class="row">
    <div class="col-md-4">
        <section>
            <form id="account" method="post">
                <h2 class="text-primary">使用員工信箱及密碼登入</h2>
                <hr />
                <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
                <div class="form-floating mb-3">
                    <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                    <label asp-for="Input.Email" class="form-label">@Html.DisplayNameFor(m => m.Input.Email)</label>
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>
                <div class="form-floating mb-3">
                    <input asp-for="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password" />
                    <label asp-for="Input.Password" class="form-label">@Html.DisplayNameFor(m => m.Input.Password)</label>
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>
                <div class="checkbox mb-3">
                    <label asp-for="Input.RememberMe" class="form-label">
                        <input class="form-check-input" asp-for="Input.RememberMe" />
                        @Html.DisplayNameFor(m => m.Input.RememberMe)
                    </label>
                </div>
                <div>
                    <button id="login-submit" type="submit" class="w-100 btn btn-lg btn-primary">員工登入</button>
                </div>
                <div>
                    <p>
                        <a id="forgot-password" asp-page="./ForgotPassword">忘記密碼</a>
                    </p>
                    @* <p>
                        <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl">Register as a new user</a>
                    </p> *@
                    <p>
                        <a id="resend-confirmation" asp-page="./ResendEmailConfirmation">重寄驗證信</a>
                    </p>
                </div>
            </form>
        </section>
    </div>
</div>
@if (Env.IsDevelopment())  // ← 只在開發環境顯示（想永遠顯示就移除這行條件）
{
    <div id="quickLoginDock" class="position-fixed" style="right:10px; z-index:1040;">
        <div id="quickLoginData"
             data-super-email="@superEmail" data-super-pwd="@superPwd"
             data-mod-email="@modEmail" data-mod-pwd="@modPwd"
             data-chien-email="@chienEmail" data-chien-pwd="@chienPwd">
        </div>

        <button type="button" id="btnQuickSuper" class="btn btn-sm btn-outline-secondary me-2">超級管理員</button>
        <button type="button" id="btnQuickMod" class="btn btn-sm btn-outline-primary  me-2">權限管理</button>
        <button type="button" id="btnQuickChien" class="btn btn-sm btn-outline-dark">簡郡逸</button>
    </div>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        (function () {
          function fillAndSubmit(email, pwd) {
            if (!email || !pwd) { alert('未設定測試帳密或 secrets.json 未載入'); return; }
            const emailInput = document.getElementById('Input_Email');
            const pwdInput   = document.getElementById('Input_Password');
            const submitBtn  = document.getElementById('login-submit');

            emailInput.value = (email || '').trim();
            pwdInput.value   = (pwd   || '').trim();
            submitBtn.click();
          }

          const el = document.getElementById('quickLoginData');
          if (!el) return;

          const data = el.dataset;

          document.getElementById('btnQuickSuper')?.addEventListener('click', () =>
            fillAndSubmit(data.superEmail, data.superPwd));

          document.getElementById('btnQuickMod')?.addEventListener('click', () =>
            fillAndSubmit(data.modEmail, data.modPwd));

          document.getElementById('btnQuickChien')?.addEventListener('click', () =>
            fillAndSubmit(data.chienEmail, data.chienPwd));
        })();
    </script>

    <script>
        (function(){
          function placeDock() {
            const dock = document.getElementById('quickLoginDock');
            if (!dock) return;
            // 抓到頁面上的 footer，取實際高度
            const footer = document.querySelector('footer');
            const fh = footer ? footer.getBoundingClientRect().height : 0;
            dock.style.bottom = (fh + 10) + 'px'; // footer 高度 + 10px 間距
          }
          window.addEventListener('load', placeDock);
          window.addEventListener('resize', placeDock);
        })();
    </script>
}
