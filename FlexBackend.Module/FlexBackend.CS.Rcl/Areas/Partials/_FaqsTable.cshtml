@model IEnumerable<FlexBackend.Infra.Models.CsFaq>

<!-- 讓 Index 在載入後知道要呼叫哪個初始化函數 -->
<div data-init="initFaqTable"></div>

<p class="d-flex gap-2 mb-2">
    <a asp-action="Create" class="btn btn-success">
        <i class="fa-solid fa-plus"></i> 新增Faq
    </a>
    <button type="button" id="btnDeleteSelected" class="btn btn-outline-danger" disabled>
        <i class="fa-regular fa-trash-can"></i> 刪除所選
    </button>
</p>

<table id="faqTable" class="table table-sm table-hover table-clean align-middle w-100">
    <thead>
        <tr>
            <th class="text-center" style="width:36px;">
                <input type="checkbox" id="chkAll" />
            </th>
            <th>Title</th>
            <th>AnswerHtml</th>
            <th>Status</th>
            <th>OrderSeq</th>
            <th>LastPublishedTime</th>
            <th>IsActive</th>
            <th>CreatedDate</th>
            <th>RevisedDate</th>
            <th>Category</th>
            <th>操作</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var tid = $"toggle-{item.FaqId}";
            <tr>
                <td class="text-center">
                    <input type="checkbox" class="js-row-check" value="@item.FaqId" />
                </td>
                <td>@item.Title</td>
                <td class="answer-cell">@Html.Raw(item.AnswerHtml)</td>
                <td>@item.Status</td>
                <td>@item.OrderSeq</td>
                <td>@(item.LastPublishedTime?.ToString("yyyy/MM/dd HH:mm"))</td>
                <td class="text-center">
                    <div class="form-check form-switch m-0 d-inline-flex align-items-center switch-wrap">
                        <input id="@tid" class="form-check-input js-toggle-active"
                               type="checkbox" data-id="@item.FaqId" @(item.IsActive ? "checked" : "") />
                        <label class="form-check-label" for="@tid">@(item.IsActive ? "啟用" : "停用")</label>
                    </div>
                </td>
                <td>@item.CreatedDate.ToString("yyyy/MM/dd HH:mm")</td>
                <td>@(item.RevisedDate?.ToString("yyyy/MM/dd HH:mm"))</td>
                <td>@item.Category?.CategoryName</td>
                <td class="text-nowrap">
                    <div class="btn-group" role="group">
                        <a asp-action="Edit" asp-route-id="@item.FaqId"
                           class="btn btn-outline-primary btn-icon" title="編輯" data-bs-toggle="tooltip">
                            <i class="fa-solid fa-pen"></i>
                        </a>
                        <a asp-action="Details" asp-route-id="@item.FaqId"
                           class="btn btn-outline-secondary btn-icon" title="檢視" data-bs-toggle="tooltip">
                            <i class="fa-regular fa-eye"></i>
                        </a>
                        <button type="button" class="btn btn-outline-danger btn-icon js-delete-btn"
                                data-id="@item.FaqId" data-title="@item.Title" title="刪除" data-bs-toggle="tooltip">
                            <i class="fa-regular fa-trash-can"></i>
                        </button>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    // 由 Index.cshtml 呼叫：window.initFaqTable(antiToken)
    window.initFaqTable = function(antiToken){

        // DataTables：注意因為多了「選取」欄，索引整體 +1
        const table = new DataTable('#faqTable', {
            fixedHeader: true,
            layout: { topStart:'pageLength', topEnd:'search', bottomStart:'info', bottomEnd:'paging' },
            paging: true,
            searching: true,
            ordering: true,
            responsive: true,
            language: { url: "//cdn.datatables.net/plug-ins/1.13.6/i18n/zh-HANT.json" },
            columnDefs: [
                // 0: 選取欄（不排序、不搜尋、置中）
                { targets: 0, orderable: false, searchable: false, className: "text-center" },
                {
                    // 2: AnswerHtml → 轉純文字 + 兩行省略
                    targets: 2,
                    render: function (data, type) {
                        const html = $('<div>').html(data || '');
                        const text = html.text().trim();
                        if (type !== 'display') return text;
                        const safeTitle = text.replace(/"/g, '&quot;');
                        const short = text.length > 60 ? text.slice(0, 60) + '…' : text;
                        return `<div class="line-clamp-2" title="${safeTitle}">${short}</div>`;
                    }
                },
                // 6: IsActive 開關欄
                { targets: 6, orderable: false, searchable: false, className: "text-center" },
                // 最後一欄：操作
                { targets: -1, orderable: false, searchable: false, className: "text-nowrap" }
            ]
        });

        // Tooltip
        const initTooltips = () => {
            document.querySelectorAll('[data-bs-toggle="tooltip"]').forEach(el => {
                const t = bootstrap.Tooltip.getInstance(el);
                if (t) t.dispose();
                new bootstrap.Tooltip(el);
            });
        };
        initTooltips();
        table.on('draw', initTooltips);

        // ===== IsActive 切換 =====
        $('#faqTable').on('change', '.js-toggle-active', function () {
            const $chk = $(this);
            const id = $chk.data('id');
            const isActive = $chk.is(':checked');
            $chk.prop('disabled', true);

            $.ajax({
                url: '@Url.Action("ToggleActive", "Faqs", new { area = "CS" })',
                type: 'POST',
                headers: { 'RequestVerificationToken': antiToken },
                data: { id, isActive },
                success: function (res) {
                    if (!res || res.ok !== true) {
                        $chk.prop('checked', !isActive);
                        Swal.fire({ title:'切換失敗', icon:'error' });
                    } else {
                        const $label = $chk.closest('.form-switch')
                                           .find('label[for="' + $chk.attr('id') + '"]');
                        $label.text(isActive ? '啟用' : '停用');
                    }
                },
                error: function () {
                    $chk.prop('checked', !isActive);
                    Swal.fire({ title:'連線失敗', icon:'error' });
                },
                complete: function () { $chk.prop('disabled', false); }
            });
        });

        // ===== 單筆刪除（SweetAlert2 + 小動畫）=====
        $('#faqTable').on('click', '.js-delete-btn', function () {
            const $btn = $(this);
            const id = $btn.data('id');
            const title = $btn.data('title');
            const safeTitle = $('<div>').text(title || ('#' + id)).html();

            Swal.fire({
                title: '確定要刪除嗎？',
                html: `你將刪除 <b>${safeTitle}</b>。此動作無法復原！`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: '是的，刪除',
                cancelButtonText: '取消',
                reverseButtons: true,
                focusCancel: true,
            }).then((result) => {
                if (!result.isConfirmed) return;
                $btn.prop('disabled', true);

                $.ajax({
                    url: '@Url.Action("DeleteAjax", "Faqs", new { area = "CS" })',
                    type: 'POST',
                    headers: { 'RequestVerificationToken': antiToken },
                    data: { id },
                    success: function (res) {
                        if (res && res.ok === true) {
                            const $tr = $btn.closest('tr');
                            $tr.addClass('table-danger');
                            $tr.fadeOut(180, function () {
                                table.row($tr).remove().draw(false);
                                Swal.fire({ title: '已刪除', icon: 'success', timer: 1200, showConfirmButton: false });
                            });
                        } else {
                            Swal.fire({ title: '刪除失敗', text: res?.message ?? '請稍後再試', icon: 'error' });
                        }
                    },
                    error: function () { Swal.fire({ title: '連線失敗', icon: 'error' }); },
                    complete: function () { $btn.prop('disabled', false); }
                });
            });
        });

        // ===== 多選：全選、行選、刪除所選 =====
        const $chkAll = $('#chkAll');
        const $btnDeleteSelected = $('#btnDeleteSelected');

        const refreshBulkUI = () => {
            const total = $('#faqTable .js-row-check').length;
            const checked = $('#faqTable .js-row-check:checked').length;
            $chkAll.prop('checked', total > 0 && checked === total)
                   .prop('indeterminate', checked > 0 && checked < total);
            $btnDeleteSelected.prop('disabled', checked === 0);
        };

        $('#faqTable thead').on('change', '#chkAll', function () {
            const checked = $(this).is(':checked');
            $('#faqTable .js-row-check').prop('checked', checked);
            refreshBulkUI();
        });

        $('#faqTable').on('change', '.js-row-check', refreshBulkUI);
        table.on('draw', refreshBulkUI);

        $btnDeleteSelected.on('click', function () {
            const ids = $('#faqTable .js-row-check:checked').map(function(){ return $(this).val(); }).get();
            if (ids.length === 0) return;

            Swal.fire({
                title: '批次刪除',
                html: `將刪除 <b>${ids.length}</b> 筆資料，確定？`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: '是的，刪除',
                cancelButtonText: '取消',
                reverseButtons: true
            }).then((r) => {
                if (!r.isConfirmed) return;

                $btnDeleteSelected.prop('disabled', true);

                $.ajax({
                    url: '@Url.Action("DeleteManyAjax", "Faqs", new { area = "CS" })',
                    type: 'POST',
                    headers: { 'RequestVerificationToken': antiToken },
                    traditional: true, // ids=1&ids=2…
                    data: { ids: ids },
                    success: function (res) {
                        if (res && res.ok === true) {
                            $('#faqTable .js-row-check:checked').each(function(){
                                const $tr = $(this).closest('tr').addClass('table-danger');
                                $tr.fadeOut(150, function(){ table.row($tr).remove().draw(false); });
                            });
                            Swal.fire({ title:'已刪除', icon:'success', timer:1200, showConfirmButton:false });
                        } else {
                            Swal.fire({ title:'刪除失敗', text: res?.message ?? '請稍後再試', icon:'error' });
                        }
                    },
                    error: function(){ Swal.fire({ title:'連線失敗', icon:'error' }); },
                    complete: function(){ refreshBulkUI(); }
                });
            });
        });
    };
</script>

