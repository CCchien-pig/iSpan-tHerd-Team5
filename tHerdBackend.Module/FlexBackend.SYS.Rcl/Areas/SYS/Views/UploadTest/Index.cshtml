@using FlexBackend.Core.DTOs
@using System.Linq
@model List<SysAssetFileDto>

@section Styles {
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet">

    <style>
        .img-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 15px; /* 縮圖間距 */
        }

        .img-item {
            position: relative;
            overflow: hidden;
        }

            .img-item img {
                width: 100%;
                height: 200px;
                object-fit: cover;
                border-radius: 6px;
                cursor: pointer;
                display: block;
            }

        .btn-close-custom {
            position: absolute;
            top: 5px;
            right: 5px;
            background: rgba(0,0,0,0.6); /* 半透明黑底 */
            border: none;
            border-radius: 50%;
            width: 28px;
            height: 28px;
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0;
            transition: opacity 0.2s;
        }

            .btn-close-custom i {
                color: white; /* 白色叉叉 */
                font-size: 16px;
            }

        .img-item:hover .btn-close-custom {
            opacity: 1;
        }

        /* 預覽區 */
        #preview .img-item {
            position: relative;
            border: 1px solid #ddd;
            border-radius: 6px;
            padding: 8px;
            background: #fafafa;
        }

            #preview .img-item img {
                width: 100%;
                height: 200px;
                object-fit: cover;
                border-radius: 4px;
                cursor: pointer;
            }

            #preview .img-item input,
            #preview .img-item textarea {
                margin-top: 5px;
            }

        fieldset {
            border: 1px solid #ccc !important;
            padding: 1rem;
        }

            fieldset legend {
                font-size: 1rem;
                font-weight: 600;
                color: #333;
            }
    </style>
}

<h2>@ViewData["Title"]</h2>

<form asp-action="Index" asp-controller="UploadTest" method="post" enctype="multipart/form-data">
    <div class="d-flex justify-content-end gap-2">
        <a asp-area="SYS" asp-controller="UploadTest" asp-action="Index"
           id="resetBtn"
           class="btn btn-outline-secondary btn-sm d-none">復原更改</a>
        <button type="submit" class="btn btn-success btn-sm">儲存</button>
    </div>

    <!-- 預覽區 -->
    <fieldset id="previewArea" class="border rounded p-3 mt-4 d-none">
        <legend class="w-auto px-2">預覽區</legend>
        <div id="preview" class="img-grid"></div>
    </fieldset>

    <!-- 拖拉區塊 -->
    <div id="dropArea" class="border border-2 border-primary rounded p-5 text-center mb-3 bg-light">
        <p class="mb-2">拖拉圖片到這裡，或點擊下方選擇檔案</p>
        <input type="file" id="fileInput" class="form-control d-none" multiple />
        <button type="button" id="selectBtn" class="btn btn-outline-primary">選擇圖片</button>
    </div>

    <!-- 隱藏 input 集合 -->
    <div id="hiddenInputs"></div>
</form>

@if (ViewBag.Message != null)
{
    <div class="alert alert-info mt-3">@ViewBag.Message</div>
}

@if (Model != null && Model.Any())
{
    <div class="img-grid">
        @for (int i = 0; i < Model.Count; i++)
        {
            var file = Model[i];
            <div class="img-item position-relative">
                <img src="@file.FileUrl"
                     alt="@file.AltText"
                     class="thumb-clickable"
                     data-alt="@file.AltText"
                     data-caption="@file.Caption" />

                <!-- X 移除按鈕 -->
                <button type="button" class="btn-close-custom" aria-label="Close">
                    <i class="bi bi-x-lg"></i>
                </button>
            </div>
        }
    </div>
}

<!-- Bootstrap Modal -->
<div class="modal fade" id="imgMetaModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">圖片資訊</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body text-center">
                <img id="modalImg"
                     src=""
                     alt=""
                     class="img-fluid mb-3 rounded"
                     style="max-width:600px; max-height:400px; object-fit:contain; cursor: zoom-in;" />

                <div class="mb-3 text-start">
                    <label for="modalAlt" class="form-label">AltText</label>
                    <input type="text" id="modalAlt" class="form-control" />
                </div>
                <div class="mb-3 text-start">
                    <label for="modalCaption" class="form-label">Caption</label>
                    <textarea id="modalCaption" class="form-control" rows="2"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="button" id="confirmMetaBtn" class="btn btn-primary">確定</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const modal = new bootstrap.Modal(document.getElementById("imgMetaModal"));
            const modalImg = document.getElementById("modalImg");
            const modalAlt = document.getElementById("modalAlt");
            const modalCaption = document.getElementById("modalCaption");

            const resetBtn = document.getElementById("resetBtn");
            const selectBtn = document.getElementById("selectBtn");
            const fileInput = document.getElementById("fileInput");
            const preview = document.getElementById("preview");
            const previewArea = document.getElementById("previewArea");

            const confirmBtn = document.getElementById("confirmMetaBtn");

            if (confirmBtn) {
                confirmBtn.addEventListener("click", function () {
                    const activeThumb = document.querySelector(`.thumb-clickable[src="${modalImg.src}"]`);
                    let changed = false;

                    if (activeThumb) {
                        const oldAlt = activeThumb.dataset.alt || "";
                        const oldCaption = activeThumb.dataset.caption || "";

                        // 更新值
                        activeThumb.alt = modalAlt.value;
                        activeThumb.dataset.alt = modalAlt.value;
                        activeThumb.dataset.caption = modalCaption.value;

                        // 判斷是否有修改
                        if (oldAlt !== modalAlt.value || oldCaption !== modalCaption.value) {
                            changed = true;
                        }
                    }

                    // 如果有預覽模式的圖片，也要同步
                    const previewImg = document.querySelector(`.preview-img[src="${modalImg.src}"]`);
                    if (previewImg) {
                        const oldAlt = previewImg.dataset.alt || "";
                        const oldCaption = previewImg.dataset.caption || "";

                        previewImg.alt = modalAlt.value;
                        previewImg.dataset.alt = modalAlt.value;
                        previewImg.dataset.caption = modalCaption.value;

                        if (oldAlt !== modalAlt.value || oldCaption !== modalCaption.value) {
                            changed = true;
                        }
                    }

                    // 有修改才顯示「復原更改」
                    if (changed) {
                        showReset();
                    }

                    modal.hide();
                });
            }

            // === 工具函式 ===
            function showReset() {
                if (resetBtn) resetBtn.classList.remove("d-none");
            }

            function togglePreviewArea(show) {
                if (previewArea) {
                    previewArea.classList.toggle("d-none", !show);
                }
            }

            // === 預覽功能 ===
            function showPreview(files) {
                preview.innerHTML = ""; // 先清空舊的，避免疊加
                [...files].forEach((file, index) => {
                    if (!file.type.startsWith("image/")) return;

                    const reader = new FileReader();
                    reader.onload = e => {
                        const wrapper = document.createElement("div");
                        wrapper.className = "img-item";

                        wrapper.innerHTML = `
                            <img src="${e.target.result}" alt="" class="preview-img" />
                            <button type="button" class="btn-close-custom" aria-label="Close">
                                <i class="bi bi-x-lg"></i>
                            </button>
                            <input type="text" class="form-control mt-2"
                                   placeholder="AltText" name="Files[${index}].AltText">
                            <textarea class="form-control mt-2"
                                      placeholder="Caption" name="Files[${index}].Caption"></textarea>
                        `;

                        // 移除按鈕
                        wrapper.querySelector(".btn-close-custom").addEventListener("click", () => {
                            wrapper.remove();
                            if (preview.children.length === 0) {
                                togglePreviewArea(false);
                            }
                            showReset();
                        });

                        preview.appendChild(wrapper);
                    };
                    reader.readAsDataURL(file);
                });

                if (files.length > 0) {
                    togglePreviewArea(true);
                    showReset();
                }
            }

            // === 綁定事件 ===

            // 選擇圖片按鈕
            if (selectBtn && fileInput) {
                selectBtn.addEventListener("click", () => fileInput.click());

                // 選擇檔案 → 預覽
                fileInput.addEventListener("change", () => {
                    showPreview(fileInput.files);
                });

                // 第二個用途（保留其他邏輯）
                fileInput.addEventListener("change", () => {
                    console.log("其他用途：例如即時上傳或驗證");
                });
            }

            // 偵測 input/textarea 改變
            document.addEventListener("input", function (e) {
                if (e.target.matches("#preview input, #preview textarea")) {
                    showReset();
                }
            });

            // 偵測刪除圖片（動態生成的 close 按鈕也算）
            document.addEventListener("click", function (e) {
                if (e.target.closest(".btn-close-custom")) {
                    showReset();
                }
            });

            // 點縮圖 → 開 modal
            document.querySelectorAll(".thumb-clickable").forEach(img => {
                img.addEventListener("click", function () {
                    modalImg.src = this.src;
                    modalImg.alt = this.alt;
                    modalAlt.value = this.dataset.alt || "";
                    modalCaption.value = this.dataset.caption || "";
                    modal.show();
                });
            });

            // 點擊大圖 → 直接開新分頁看原圖
            modalImg.addEventListener("click", function () {
                if (modalImg.src) {
                    window.open(modalImg.src, "_blank");
                }
            });

            // 更新按鈕（modal 裡的 Alt/Caption 更新）→ 即時反映到縮圖
            const saveBtn = document.getElementById("saveMetaBtn");
            if (saveBtn) {
                saveBtn.addEventListener("click", function () {
                    const activeThumb = document.querySelector(`.thumb-clickable[src="${modalImg.src}"]`);
                    if (activeThumb) {
                        activeThumb.alt = modalAlt.value;
                        activeThumb.dataset.alt = modalAlt.value;
                        activeThumb.dataset.caption = modalCaption.value;
                    }
                    showReset();
                    modal.hide();
                });
            }
        });
    </script>
}

