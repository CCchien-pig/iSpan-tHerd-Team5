@* 使用「清單用 ViewModel」，以便顯示中文表頭（來自 [Display(Name="…")]） *@
@model IEnumerable<FaqListItemVM>

@section Styles {
    <!-- DataTables × Bootstrap 5 皮膚 -->
    <link href="https://cdn.datatables.net/2.3.3/css/dataTables.bootstrap5.min.css" rel="stylesheet" />
    <link href="https://cdn.datatables.net/fixedheader/4.0.3/css/fixedHeader.bootstrap5.min.css" rel="stylesheet" />
    <!-- Font Awesome（圖示） -->
    <link href="~/font-awesome/css/all.min.css" rel="stylesheet" />

    <style>
        /* ===== 版面微調：更清爽的表頭、較緊湊列距 ===== */
        .table thead th {
            background: #f8f9fa;
            font-weight: 600;
        }

        .table-sm > :not(caption) > * > * {
            padding: .55rem .6rem;
        }

        /* 答案欄行高與字色微調 */
        td.answer-cell {
            line-height: 1.35;
            color: #444;
        }

        /* ===== 分類 badge（淺紫，不要太圓）===== */
        :root {
            /* 可在此微調整體色系 */
            --cat-bg: #f3e8ff; /* 淺紫底 */
            --cat-bd: #e9d5ff; /* 淺紫框 */
            --cat-fg: #6d28d9; /* 紫色字 */
            --cat-bg-h: #ede9fe; /* hover 底 */
        }

        .badge-category {
            display: inline-block;
            padding: .28rem .5rem;
            font-size: .85rem;
            font-weight: 600;
            color: var(--cat-fg);
            background: var(--cat-bg);
            border: 1px solid var(--cat-bd);
            border-radius: .3rem; /* 不要太圓 */
            line-height: 1.1;
        }

            .badge-category:hover {
                background: var(--cat-bg-h);
                border-color: var(--cat-bd);
            }

        /* 未分類（灰系） */
        .badge-category--muted {
            color: #6c757d;
            background: #f8f9fa;
            border: 1px solid #e9ecef;
        }

        /* ===== 工具：1 行 / 2 行 省略 ===== */
        .line-clamp-1 {
            display: -webkit-box;
            -webkit-line-clamp: 1;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: normal;
        }

        .line-clamp-2 {
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        /* 較輕的列底線 */
        .table-clean > :not(caption) > * > * {
            border-bottom-color: #eee;
        }

        /* 行動按鈕（小圓角 icon 鈕） */
        .btn-icon {
            width: 2rem;
            height: 2rem;
            padding: 0;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            border-radius: .5rem;
        }

        /* 開關與文字對齊 */
        .switch-wrap {
            gap: .4rem;
        }

            .switch-wrap .form-check-input {
                cursor: pointer;
            }

            .switch-wrap .form-check-label {
                font-size: .875rem;
                color: #6c757d;
            }
    </style>
}

@{
    ViewData["Title"] = "FAQ內容管理";
}

<h1>@ViewData["Title"]</h1>

<p class="d-flex gap-2">
    <a asp-action="Create" class="btn btn-success">
        <i class="fa-solid fa-plus"></i> 新增Faq
    </a>
    <button type="button" id="btnDeleteSelected" class="btn btn-outline-danger" disabled>
        <i class="fa-regular fa-trash-can"></i> 刪除所選
    </button>
</p>

@* Anti-forgery：提供 AJAX 使用 *@
<form id="antiForgeryForm" method="post">
    @Html.AntiForgeryToken()
</form>

<!-- ===== FAQ 資料表 =====
     欄位索引（供 DataTables 對應）：
     0 勾選、1 標題、2 答案、3 分類、4 排序、5 最近發布時間、
     6 啟用、7 建立時間、8 修改時間、9 操作
-->
<table id="faqTable" class="table table-sm table-hover table-clean align-middle">
    <thead>
        <tr>
            <th style="width:36px;" class="text-center"><input type="checkbox" id="chkAll" /></th>
            <th>@Html.DisplayNameFor(m => m.Title)</th>
            <th>@Html.DisplayNameFor(m => m.AnswerHtml)</th>
            <th>@Html.DisplayNameFor(m => m.CategoryName)</th>
            <th>@Html.DisplayNameFor(m => m.OrderSeq)</th>
            <th>@Html.DisplayNameFor(m => m.LastPublishedTime)</th>
            <th>@Html.DisplayNameFor(m => m.IsActive)</th>
            <th>@Html.DisplayNameFor(m => m.CreatedDate)</th>
            <th>@Html.DisplayNameFor(m => m.RevisedDate)</th>
            <th>操作</th>
        </tr>
    </thead>
    <tbody>
        @* 重要：分類欄只輸出「純文字」，分類 badge 交給 DataTables 在 render 中包裝 *@
        @foreach (var item in Model)
        {
            var toggleId = $"toggle-{item.FaqId}";
            <tr>
                <!-- 0 勾選 -->
                <td class="text-center">
                    <input type="checkbox" class="js-row-check" value="@item.FaqId" />
                </td>

                <!-- 1 標題：顯示原文，DataTables 會再 1 行省略 -->
                <td>@item.Title</td>

                <!-- 2 答案：先丟原 HTML；DataTables 會轉純文字 + 2 行省略 -->
                <td class="answer-cell">@Html.Raw(item.AnswerHtml)</td>

                <!-- 3 分類：只丟純文字；DataTables render 時包 badge -->
                <td>@item.CategoryName</td>

                <!-- 4 排序 -->
                <td>@item.OrderSeq</td>

                <!-- 5 最近發布時間 -->
                <td>@(item.LastPublishedTime?.ToString("yyyy/MM/dd HH:mm"))</td>

                <!-- 6 啟用（開關） -->
                <td class="text-center">
                    <div class="form-check form-switch m-0 d-inline-flex align-items-center switch-wrap">
                        <input id="@toggleId"
                               class="form-check-input js-toggle-active"
                               type="checkbox"
                               data-id="@item.FaqId"
                               @(item.IsActive ? "checked" : "")
                               aria-label="切換啟用狀態" />
                        <label class="form-check-label" for="@toggleId">
                            @(item.IsActive ? "啟用" : "停用")
                        </label>
                    </div>
                </td>

                <!-- 7 建立時間 -->
                <td>@item.CreatedDate.ToString("yyyy/MM/dd HH:mm")</td>

                <!-- 8 修改時間 -->
                <td>@(item.RevisedDate?.ToString("yyyy/MM/dd HH:mm"))</td>

                <!-- 9 操作 -->
                <td class="text-nowrap">
                    <div class="btn-group" role="group" aria-label="Actions">
                        <a asp-action="Edit" asp-route-id="@item.FaqId"
                           class="btn btn-outline-primary btn-icon" data-bs-toggle="tooltip" title="編輯">
                            <i class="fa-solid fa-pen"></i>
                        </a>
                        <a asp-action="Details" asp-route-id="@item.FaqId"
                           class="btn btn-outline-secondary btn-icon" data-bs-toggle="tooltip" title="檢視">
                            <i class="fa-regular fa-eye"></i>
                        </a>
                        <button type="button"
                                class="btn btn-outline-danger btn-icon js-delete-btn"
                                data-id="@item.FaqId" data-title="@item.Title"
                                data-bs-toggle="tooltip" title="刪除">
                            <i class="fa-regular fa-trash-can"></i>
                        </button>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    // 若 Controller 在 Area(CS) 下，建議用 Url.Action 產出正確路徑
    var deleteUrl = Url.Action("DeleteAjax", "Faqs", new { area = "CS" });
    var deleteManyUrl = Url.Action("DeleteManyAjax", "Faqs", new { area = "CS" });
}

@section Scripts {
    <!-- jQuery / Bootstrap / SweetAlert2 / DataTables -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.datatables.net/2.3.3/js/dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/2.3.3/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://cdn.datatables.net/fixedheader/4.0.3/js/dataTables.fixedHeader.min.js"></script>

    <script>
        $(function () {
            const antiToken = $('#antiForgeryForm input[name="__RequestVerificationToken"]').val();

            // ====== DataTables 初始化 ======
            const table = new DataTable('#faqTable', {
                fixedHeader: true,
                layout: {
                    topStart: 'pageLength',
                    topEnd: 'search',
                    bottomStart: 'info',
                    bottomEnd: 'paging'
                },
                paging: true,
                searching: true,
                ordering: true,
                responsive: true,
                language: { url: "https://cdn.datatables.net/plug-ins/1.13.6/i18n/zh-HANT.json" },

                // 欄位渲染與寬度設定（索引請與表頭一致）
                columnDefs: [
                    // 0: 勾選欄（不排序、不搜尋）
                    { targets: 0, orderable: false, searchable: false, className: "text-center", width: "36px" },

                    // 1: 標題 → 1 行省略 + title
                    {
                        targets: 1, width: "18%",
                        render: function (data, type) {
                            const text = $('<div>').html(data || '').text().trim();
                            if (type !== 'display') return text;
                            const safe = text.replace(/"/g, '&quot;');
                            return `<div class="line-clamp-1" title="${safe}">${text}</div>`;
                        }
                    },

                    // 2: 答案 → 轉純文字 + 2 行省略 + title
                    {
                        targets: 2, width: "34%",
                        render: function (data, type) {
                            const text = $('<div>').html(data || '').text().trim();
                            if (type !== 'display') return text;
                            const safe = text.replace(/"/g, '&quot;');
                            const short = text.length > 80 ? text.slice(0, 80) + '…' : text; // 可自行調整 80
                            return `<div class="line-clamp-2" title="${safe}">${short}</div>`;
                        }
                    },

                    // 3: 分類 → 以 badge 呈現（若空值顯示「未分類」）
                    {
                        targets: 3, width: "12%",
                        render: function (data, type) {
                            if (type !== 'display') return data || '';
                            const name = ($('<div>').html(data || '').text() || '').trim();
                            if (!name) return '<span class="badge-category badge-category--muted">未分類</span>';
                            const safe = $('<div>').text(name).html();
                            return `<span class="badge-category">${safe}</span>`;
                        }
                    },

                    // 6: 啟用開關欄（不排序、不搜尋）
                    { targets: 6, orderable: false, searchable: false, className: "text-center", width: "90px" },

                    // 9: 操作欄（不排序、不搜尋）
                    { targets: -1, orderable: false, searchable: false, className: "text-nowrap", width: "120px" }
                ],

                // 建議預設排序：先「排序」升冪，再「最近發布時間」降冪
                order: [[4, 'asc'], [5, 'desc']]
            });

            // Tooltip（重繪時需重新掛）
            const initTooltips = () => {
                document.querySelectorAll('[data-bs-toggle="tooltip"]').forEach(el => {
                    const t = bootstrap.Tooltip.getInstance(el);
                    if (t) t.dispose();
                    new bootstrap.Tooltip(el);
                });
            };
            initTooltips();
            table.on('draw', initTooltips);

            // ===== 啟用/停用切換 =====
            $('#faqTable').on('change', '.js-toggle-active', function () {
                const $chk = $(this);
                const id = $chk.data('id');
                const isActive = $chk.is(':checked');
                $chk.prop('disabled', true);

                $.ajax({
                    url: '/CS/Faqs/ToggleActive', // 如果不在 Area 請改成 '/Faqs/ToggleActive'
                    type: 'POST',
                    headers: { 'RequestVerificationToken': antiToken },
                    data: { id, isActive },
                    success: function (res) {
                        if (!res || res.ok !== true) {
                            $chk.prop('checked', !isActive);
                            Swal.fire({ title: '切換失敗', icon: 'error' });
                        } else {
                            const $label = $chk.closest('.form-switch').find('label[for="' + $chk.attr('id') + '"]');
                            $label.text(isActive ? '啟用' : '停用');
                        }
                    },
                    error: function () {
                        $chk.prop('checked', !isActive);
                        Swal.fire({ title: '連線失敗', icon: 'error' });
                    },
                    complete: function () { $chk.prop('disabled', false); }
                });
            });

            // ===== 單筆刪除（SweetAlert2 + 動畫）=====
            $('#faqTable').on('click', '.js-delete-btn', function () {
                const $btn = $(this);
                const id = $btn.data('id');
                const title = $btn.data('title');
                const safeTitle = $('<div>').text(title || ('#' + id)).html();

                Swal.fire({
                    title: '確定要刪除嗎？',
                    html: `你將刪除 <b>${safeTitle}</b>。此動作無法復原！`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: '是的，刪除',
                    cancelButtonText: '取消',
                    reverseButtons: true,
                    focusCancel: true,
                }).then((r) => {
                    if (!r.isConfirmed) return;
                    $btn.prop('disabled', true);

                    $.ajax({
                        url: '@deleteUrl',
                        type: 'POST',
                        headers: { 'RequestVerificationToken': antiToken },
                        data: { id },
                        success: function (res) {
                            if (res && res.ok === true) {
                                const $tr = $btn.closest('tr').addClass('table-danger');
                                $tr.fadeOut(180, function () {
                                    table.row($tr).remove().draw(false);
                                    Swal.fire({ title: '已刪除', icon: 'success', timer: 1200, showConfirmButton: false });
                                });
                            } else {
                                Swal.fire({ title: '刪除失敗', text: (res && res.message) ? res.message : '請稍後再試', icon: 'error' });
                            }
                        },
                        error: function () { Swal.fire({ title: '連線失敗', icon: 'error' }); },
                        complete: function () { $btn.prop('disabled', false); }
                    });
                });
            });

            // ===== 多選：全選、行選、刪除所選 =====
            const $chkAll = $('#chkAll');
            const $btnDeleteSelected = $('#btnDeleteSelected');

            // 更新全選 & 按鈕可用性
            const refreshBulkUI = () => {
                const total = $('#faqTable .js-row-check').length;
                const checked = $('#faqTable .js-row-check:checked').length;
                $chkAll.prop('checked', total > 0 && checked === total)
                       .prop('indeterminate', checked > 0 && checked < total);
                $btnDeleteSelected.prop('disabled', checked === 0);
            };

            // 全選
            $('#faqTable thead').on('change', '#chkAll', function () {
                const checked = $(this).is(':checked');
                $('#faqTable .js-row-check').prop('checked', checked);
                refreshBulkUI();
            });

            // 單列勾選
            $('#faqTable').on('change', '.js-row-check', refreshBulkUI);
            table.on('draw', refreshBulkUI);

            // 批次刪除
            $btnDeleteSelected.on('click', function () {
                const ids = $('#faqTable .js-row-check:checked').map(function(){ return $(this).val(); }).get();
                if (ids.length === 0) return;

                Swal.fire({
                    title: '批次刪除',
                    html: `將刪除 <b>${ids.length}</b> 筆資料，確定？`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: '是的，刪除',
                    cancelButtonText: '取消',
                    reverseButtons: true
                }).then((r) => {
                    if (!r.isConfirmed) return;

                    $btnDeleteSelected.prop('disabled', true);

                    $.ajax({
                        url: '@deleteManyUrl',
                        type: 'POST',
                        headers: { 'RequestVerificationToken': antiToken },
                        traditional: true,     // 讓 jQuery 送出 ids=1&ids=2…
                        data: { ids: ids },
                        success: function (res) {
                            if (res && res.ok === true) {
                                $('#faqTable .js-row-check:checked').each(function(){
                                    const $tr = $(this).closest('tr').addClass('table-danger');
                                    $tr.fadeOut(150, function(){ table.row($tr).remove().draw(false); });
                                });
                                Swal.fire({ title:'已刪除', icon:'success', timer:1200, showConfirmButton:false });
                            } else {
                                Swal.fire({ title:'刪除失敗', text: (res && res.message) ? res.message : '請稍後再試', icon:'error' });
                            }
                        },
                        error: function(){ Swal.fire({ title:'連線失敗', icon:'error' }); },
                        complete: function(){ refreshBulkUI(); }
                    });
                });
            });
        });
    </script>
}
