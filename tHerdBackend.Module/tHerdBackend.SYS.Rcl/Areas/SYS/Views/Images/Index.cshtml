@using tHerdBackend.Core.DTOs.SYS
@model IEnumerable<FolderItemDto>

@section Styles {
    <link href="https://cdn.datatables.net/1.13.8/css/dataTables.bootstrap5.min.css" rel="stylesheet" />
    <link href="https://cdn.datatables.net/fixedheader/3.4.0/css/fixedHeader.bootstrap5.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet" />
    <style>
        .file-browser {
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 6px rgba(0,0,0,0.08);
            padding: 1.5rem;
        }

        .breadcrumb {
            background: #f8f9fa;
            border-radius: 6px;
            padding: 0.5rem 1rem;
        }

            .breadcrumb a {
                position: relative;
                transition: color 0.2s ease-in-out;
            }

                .breadcrumb a:hover {
                    color: #0d6efd;
                    text-decoration: underline;
                }

                .breadcrumb a:active {
                    color: #0a58ca;
                }

        .file-row:hover {
            background-color: #f1f5ff !important;
            cursor: pointer;
        }

        .thumb {
            width: 48px;
            height: 48px;
            object-fit: cover;
            border-radius: 6px;
        }

        .img-preview {
            max-width: 100%;
            max-height: 80vh;
            border-radius: 8px;
        }

        /* 表格凍結窗格樣式 */
        .dataTables_scrollHead {
            background-color: #fff;
            position: sticky;
            top: 0;
            z-index: 5;
        }

        .dataTables_wrapper tbody tr {
            transition: all 0.15s ease-in-out;
        }

            .dataTables_wrapper tbody tr:hover {
                background-color: #f1f5ff;
                transform: scale(1.01);
            }
    </style>
}

<div class="container py-4 file-browser">
    <div class="d-flex justify-content-between align-items-center mb-3 sticky-top bg-white pb-2" style="z-index:10;">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb mb-3" id="breadcrumb">
                <li class="breadcrumb-item"><a href="#" class="crumb" data-id="">根目錄</a></li>
            </ol>
        </nav>

        <div class="d-flex align-items-center">
            <input id="searchBox" class="form-control form-control-sm" placeholder="搜尋檔名或關鍵字..." style="width:250px;">
            <button id="btnSearch" class="btn btn-primary btn-sm ms-2"><i class="bi bi-search"></i> 搜尋</button>
        </div>
    </div>

    <div class="table-responsive">
        <table id="fileTable" class="table table-hover align-middle w-100">
            <thead class="table-light">
                <tr>
                    <th>名稱</th>
                    <th>修改日期</th>
                    <th>類型</th>
                    <th>大小</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

<!-- 🔍 圖片預覽 Modal -->
<div class="modal fade" id="imagePreviewModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content bg-dark text-center">
            <div class="modal-body">
                <img id="previewImg"
                     src=""
                     alt="preview"
                     class="img-preview"
                     onerror="this.onerror=null; this.src='/images/No-Image.svg';" />
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.8/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.8/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://cdn.datatables.net/fixedheader/3.4.0/js/dataTables.fixedHeader.min.js"></script>

    <script>
        let breadcrumbStack = [{ id: null, name: "根目錄" }];

        // 建立全域實例（或用 let 存起來）
        let previewModal;

        document.addEventListener('DOMContentLoaded', () => {
          const modalEl = document.getElementById('imagePreviewModal');
          // 建立或取得實例
          previewModal = bootstrap.Modal.getOrCreateInstance(modalEl, {
            backdrop: true,
            keyboard: true
          });
        });

        // 圖片預覽
        $(document).on("click", ".image-thumb", function () {
          const url = $(this).data("url");
          const $img = $("#previewImg");

          $img.attr("src", "/images/loading.gif");

          // 用 BS5 實例顯示
          previewModal.show();

          const temp = new Image();
          temp.onload = () => $img.attr("src", url);
          temp.onerror = () => $img.attr("src", "/images/No-Image.svg");
          temp.src = url;
        });

        // 完全靜默版：不再發 HEAD 請求，不會報紅字
        async function getValidYoutubeThumb(videoId) {
            if (!videoId) return "/images/No-Image.svg";
            const base = `https://img.youtube.com/vi/${videoId}/`;
            const versions = ["maxresdefault.jpg", "hqdefault.jpg", "mqdefault.jpg", "default.jpg"];

            for (const v of versions) {
                const url = base + v;
                const ok = await preloadImage(url); // 用 <img> 靜默測試
                if (ok) return url;
            }
            return "/images/No-Image.svg";
        }

        // 以 <img> 預載方式靜默測試，絕對不印紅字
        function preloadImage(url) {
            return new Promise(resolve => {
                const img = new Image();
                img.onload = () => resolve(true);
                img.onerror = () => resolve(false);
                img.src = url;
            });
        }

        // 通用圖片驗證（非 YouTube）
        async function isImageValid(url) {
            try {
                const res = await fetch(url, { method: "HEAD" });
                return res.ok;
            } catch {
                return false;
            }
        }

        // DataTable 初始化（含固定表頭 + 分頁）
        const table = $('#fileTable').DataTable({
            processing: true,
            serverSide: true,
            searching: false,
            paging: true,
            searching: false,
            info: true,
            pageLength: 10,
            lengthChange: false,
            scrollY: "60vh",
            scrollCollapse: true,
            fixedHeader: true,
            order: [],
            columnDefs: [
                {
                    targets: 0,
                    render: function (data, type, row) {
                        if (type === 'sort') return row.isFolder ? '0_' + data : '1_' + data;
                        return renderName(data, type, row);
                    }
                }
            ],
            ajax: {
                url: '/SYS/Images/GetPagedFolderItems',
                type: 'GET',
                data: function (d) {
                    // DataTables 自動傳 start/length/draw，這裡只補 parentId 與 keyword
                    const last = breadcrumbStack[breadcrumbStack.length - 1];
                    d.parentId = last?.id ?? null;
                    d.keyword = $("#searchBox").val();
                },
                dataSrc: function (json) {
                    // 自動同步更新麵包屑
                    if (json.breadcrumb) {
                        renderBreadcrumb(json.breadcrumb);
                    }

                    // DataTables 會使用這個陣列來渲染
                    return json.data || json.data || [];
                },
                error: function (xhr, status, error) {
                    console.error("載入資料發生錯誤：", error);
                }
            },
            columns: [
                { data: "name" },
                { data: "modifiedDate", render: d => d ? new Date(d).toLocaleString() : "-" },
                { data: "mimeType", render: r => r || "-" },
                { data: "size", render: s => s ? (s / 1024).toFixed(1) + " KB" : "-" }
            ],
            language: {
                processing: "資料讀取中...",
                emptyTable: "目前沒有任何資料",
                info: "顯示第 _START_ 筆到第 _END_ 筆，共 _TOTAL_ 筆資料",
                infoEmpty: "顯示第 0 筆到第 0 筆，共 0 筆",
                paginate: { first: "第一頁", last: "最後一頁", next: "下一頁", previous: "上一頁" }
            }
        });

        // DataTable 重繪後補載圖片
        table.on('draw', async () => {
            const thumbs = document.querySelectorAll('.image-thumb[data-url]');
            for (const img of thumbs) {
                const url = img.dataset.url;
                if (!url) continue;

                // YouTube 圖片：靜默檢查
                if (url.includes("img.youtube.com/vi/")) {
                    const videoId = url.split("/vi/")[1]?.split("/")[0];
                    const validUrl = await getValidYoutubeThumb(videoId);
                    img.src = validUrl;
                }
                // 一般圖片：直接載入（用 onerror fallback）
                else {
                    img.src = url;
                }
            }
        });

        // 圖片 + 資料夾名稱渲染
        function renderName(data, type, row) {
            if (row.isFolder) {
                return `<i class="bi bi-folder-fill text-warning me-2"></i>
                        <a href="#" class="folder-link text-decoration-none" data-id="${row.id}">${data}</a>`;
            }

            const placeholder = "/images/No-Image.svg";
            if (row.mimeType?.startsWith("image/") || row.url?.includes("img.youtube.com/vi/")) {
                return `<img src="${placeholder}"
                             onerror="this.onerror=null;this.src='${placeholder}'"
                             class="thumb me-2 image-thumb"
                             data-url="${row.url}" /> ${data}`;
            }

            return `<i class="bi bi-file-earmark text-secondary me-2"></i>${data}`;
        }

        // 載入資料夾
        async function loadFolder(folderId = null, keyword = "") {
            // 資料夾切換時平滑滾動至頂端
            $('html, body').animate({ scrollTop: 0 }, 300);

            const $table = $('#fileTable');
            $table.addClass("opacity-50"); // 半透明效果
            $("#btnSearch").prop("disabled", true).html('<i class="bi bi-hourglass-split"></i> 載入中...');

            try {
                table.ajax.reload(null, false); // 改成用 DataTables 自動載入
                // // 呼叫支援分頁的 API
                // const res = await fetch(
                //     `/SYS/Images/GetPagedFolderItems?parentId=${folderId ?? ""}&keyword=${keyword}`
                // );
                // const data = await res.json();

                // // 更新 DataTable 的內容
                // // 若有 serverSide 模式可直接 table.ajax.reload()，否則手動更新：
                // if (table) {
                //     table.clear().rows.add(data.items || data.data || []).draw();
                // }

                // // 更新麵包屑顯示（若後端有傳）
                // if (data.breadcrumb) {
                //     renderBreadcrumb(data.breadcrumb);
                // }
            } catch (err) {
                console.error("載入資料夾發生錯誤：", err);
                alert("載入資料夾失敗，請稍後再試。");
            } finally {
                // 還原 UI 狀態
                $table.removeClass("opacity-50");
                $("#btnSearch")
                    .prop("disabled", false)
                    .html('<i class="bi bi-search"></i> 搜尋');
            }
        }

        // 麵包屑
        function renderBreadcrumb(list) {
          const $bc = $('#breadcrumb').empty();
          $bc.append(`<li class="breadcrumb-item"><a href="#" class="crumb" data-id="0">根目錄</a></li>`);

          if (!Array.isArray(list) || list.length === 0) return;

          list.forEach((p, i) => {
            // ✅ 同時支援 folderName / FolderName
            const name = p.folderName ?? p.FolderName;
            const id = p.folderId ?? p.FolderId;
            if (!name) return;

            const isLast = i === list.length - 1;
            $bc.append(`<li class="breadcrumb-item ${isLast ? 'active' : ''}">
              ${isLast ? name : `<a href="#" class="crumb" data-id="${id}">${name}</a>`}
            </li>`);
          });
        }

        // function renderBreadcrumb(list) {
        //     const $bc = $('#breadcrumb').empty();
        //     $bc.append(`<li class="breadcrumb-item"><a href="#" class="crumb" data-id="">根目錄</a></li>`);

        //     list.forEach((p, i) => {
        //         const name = p.name || p; // 若後端傳的是物件
        //         const id = p.id ?? null;
        //         if (name === "根目錄") return;

        //         const isLast = i === list.length - 1;
        //         $bc.append(`<li class="breadcrumb-item ${isLast ? 'active' : ''}">
        //             ${isLast ? name : `<a href="#" class="crumb" data-id="${id}">${name}</a>`}
        //         </li>`);
        //     });

        //     if (list.length > 1) {
        //         $bc.prepend(`<li class="breadcrumb-item">
        //             <a href="#" id="goBack"><i class="bi bi-arrow-left-short"></i> 回上一層</a>
        //         </li>`);
        //     }
        // }

        // 點擊資料夾
        $(document).on("click", ".folder-link", async function (e) {
            e.preventDefault();
            const id = $(this).data("id");
            breadcrumbStack.push({ id: id, name: $(this).text() });
            // await loadFolder(id);
            table.ajax.reload(null, false); // 第二參數 false => 保留目前頁碼
        });

        // 點擊麵包屑
        $(document).on("click", ".crumb", async function (e) {
          e.preventDefault();
          const id = $(this).data("id");

          // 根目錄特例
          if (id === 0) {
            breadcrumbStack = [{ id: null, name: "根目錄" }];
            await loadFolder(null);
            return;
          }

          breadcrumbStack = breadcrumbStack.slice(0, breadcrumbStack.findIndex(x => x.id === id) + 1);
          await loadFolder(id);
        });

        // 點擊麵包屑（含根目錄）
        async function loadFolder(folderId = null, keyword = "") {
            const $table = $('#fileTable');
            $table.addClass("opacity-50"); // 半透明效果
            $("#btnSearch").prop("disabled", true).html('<i class="bi bi-hourglass-split"></i> 載入中...');

            try {
                const res = await fetch(`/SYS/Images/GetFolderItems?parentId=${folderId ?? ''}&keyword=${keyword}`);
                const data = await res.json();

                const folders = data.items.filter(x => x.isFolder);
                const files = data.items.filter(x => !x.isFolder);
                const combined = [...folders, ...files];
                table.clear().rows.add(combined).draw();

                renderBreadcrumb(data.breadcrumb);
            } finally {
                // 還原 UI 狀態
                $table.removeClass("opacity-50");
                $("#btnSearch").prop("disabled", false).html('<i class="bi bi-search"></i> 搜尋');
            }
        }

        // 回上一層
        $(document).on("click", "#goBack", async function (e) {
            e.preventDefault();
            if (breadcrumbStack.length > 1) breadcrumbStack.pop();

            const last = breadcrumbStack[breadcrumbStack.length - 1];
            $("#fileTable").fadeOut(100);
            await loadFolder(last.id);
            $("#fileTable").fadeIn(200);
        });

        // 圖片預覽
        $(document).on("click", ".image-thumb", function () {
          const url = $(this).data("url");
          const $img = $("#previewImg");

          $img.attr("src", "/images/loading.gif");

          // 改用 Bootstrap 5 原生 Modal API
          const modalEl = document.getElementById("imagePreviewModal");
          const modal = new bootstrap.Modal(modalEl, {
            backdrop: true,
            keyboard: true
          });
          modal.show();

          const temp = new Image();
          temp.onload = () => $img.attr("src", url);
          temp.onerror = () => $img.attr("src", "/images/No-Image.svg");
          temp.src = url;
        });

        $("#previewImg").on("error", function () {
            $(this).attr("src", "/images/No-Image.svg");
        });

        // 搜尋
        $("#btnSearch").click(() => {
            table.ajax.reload(null, false); // 第二參數 false => 保留目前頁碼
        });
        // $("#btnSearch").click(() => {
        //     const keyword = $("#searchBox").val();
        //     const last = breadcrumbStack[breadcrumbStack.length - 1];
        //     loadFolder(last.id, keyword);
        // });

        $("#searchBox").on("keypress", function (e) {
            if (e.which === 13) $("#btnSearch").click();
        });

        // $("#searchBox").on("keypress", function (e) {
        //     if (e.which === 13) {
        //         $("#btnSearch").click();
        //     }
        // });

        // 初始化
        loadFolder();
    </script>
}
