@using tHerdBackend.Core.DTOs
@using System.Linq
@model List<SysAssetFileDto>

@section Styles {
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet">

    <style>
        .img-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 15px; /* 縮圖間距 */
        }

        .img-item {
            position: relative;
            overflow: hidden;
        }

            .img-item img {
                width: 100%;
                height: 200px;
                object-fit: cover;
                border-radius: 6px;
                cursor: pointer;
                display: block;
            }

        .btn-close-custom {
            position: absolute;
            top: 5px;
            right: 5px;
            background: rgba(0,0,0,0.6); /* 半透明黑底 */
            border: none;
            border-radius: 50%;
            width: 28px;
            height: 28px;
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0;
            transition: opacity 0.2s;
        }

            .btn-close-custom i {
                color: white; /* 白色叉叉 */
                font-size: 16px;
            }

        .img-item:hover .btn-close-custom {
            opacity: 1;
        }

        /* 預覽區 */
        #preview .img-item {
            position: relative;
            border: 1px solid #ddd;
            border-radius: 6px;
            padding: 8px;
            background: #fafafa;
        }

            #preview .img-item img {
                width: 100%;
                height: 200px;
                object-fit: cover;
                border-radius: 4px;
                cursor: pointer;
            }

            #preview .img-item input,
            #preview .img-item textarea {
                margin-top: 5px;
            }

        fieldset {
            border: 1px solid #ccc !important;
            padding: 1rem;
        }

            fieldset legend {
                font-size: 1rem;
                font-weight: 600;
                color: #333;
            }

            <!-- 圖片啟用 / 停用 -->
        .img-item {
            position: relative;
            overflow: hidden;
            border-radius: 6px;
        }

            /* 縮圖 */
            .img-item img {
                width: 100%;
                height: 200px;
                object-fit: cover;
                border-radius: 6px;
                transition: 0.2s ease-in-out;
            }

            /* 停用灰階 + 半透明 */
            .img-item.inactive img {
                filter: grayscale(100%);
                opacity: 0.5;
            }

        /* 浮水印：禁止符號 */
        .disabled-overlay {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 48px;
            color: rgba(255, 255, 255, 0.9);
            opacity: 0;
            pointer-events: none;
            transition: opacity 0.3s;
        }

        .img-item.inactive .disabled-overlay {
            opacity: 1;
        }

        .toggle-active-btn {
            position: absolute;
            bottom: 6px;
            right: 6px;
            display: none;
            z-index: 10;
            font-weight: 600;
            letter-spacing: 1px;
            border-radius: 20px;
            background: rgba(0, 0, 0, 0.7);
            color: white;
            text-transform: uppercase;
            transition: background 0.2s;
            padding: 2px 10px;
            font-size: 12px;
        }

            .toggle-active-btn:hover {
                background: rgba(255, 255, 255, 0.85);
                color: black;
            }

        /* Hover 顯示 */
        .img-item:hover .toggle-active-btn {
            display: inline-block;
        }

        /* Hover 效果：稍微放大圖片 */
        .img-item:hover img {
            transform: scale(1.05);
        }

    </style>
}

<h2>@ViewData["Title"]</h2>

<form asp-action="Index" asp-controller="UploadTest" method="post" enctype="multipart/form-data">
    <div class="d-flex justify-content-end gap-2">
        <a asp-area="SYS" asp-controller="UploadTest" asp-action="Index"
           id="resetBtn"
           class="btn btn-outline-secondary btn-sm d-none">復原更改</a>
        <button type="submit" class="btn btn-success btn-sm">上傳</button>
    </div>

    <!-- 預覽區 -->
    <fieldset id="previewArea" class="border rounded p-3 mt-4 d-none">
        <legend class="w-auto px-2">預覽區</legend>
        <div id="preview" class="img-grid"></div>
    </fieldset>

    <!-- 拖拉區塊 -->
    <div id="dropArea" class="border border-2 border-primary rounded p-5 text-center mb-3 bg-light">
        <p class="mb-2">拖拉圖片到這裡，或點擊下方選擇檔案</p>
        <input type="file" id="fileInput" name="Files" class="form-control d-none" multiple />
        <button type="button" id="selectBtn" class="btn btn-outline-primary">選擇圖片</button>
    </div>

    <!-- 隱藏 input 集合 -->
    <div id="hiddenInputs"></div>
</form>

@if (ViewBag.Message != null)
{
    <div class="alert alert-info mt-3">@ViewBag.Message</div>
}

@if (Model != null && Model.Any())
{
    <div class="img-grid">
        @for (int i = 0; i < Model.Count; i++)
        {
            var file = Model[i];
            <div class="img-item position-relative @(file.IsActive ? "" : "inactive")">
                <img src="@file.FileUrl"
                     alt="@file.AltText"
                     class="thumb-clickable"
                     data-file-id="@file.FileId"
                     data-alt="@file.AltText"
                     data-caption="@file.Caption"
                     data-is-active="@file.IsActive.ToString().ToLower()" />

                <!-- X 移除按鈕 -->
                <button type="button" class="btn-close-custom" aria-label="Close" onclick="deleteFile(@file.FileId)">
                    <i class="bi bi-x-lg"></i>
                </button>

                <!-- Hover 顯示的啟用/停用按鈕 -->
                <button type="button"
                        class="toggle-active-btn btn btn-sm"
                        onclick="toggleActive(@file.FileId, this)">
                    @(file.IsActive ? "停用" : "啟用")
                </button>

                <!-- 停用浮水印 -->
                <div class="disabled-overlay">
                    <i class="bi bi-slash-circle"></i>
                </div>
            </div>
        }
    </div>
}

<!-- Bootstrap Modal -->
<div class="modal fade" id="imgMetaModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">圖片資訊</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body text-center">
                <img id="modalImg"
                     src=""
                     alt=""
                     class="img-fluid mb-3 rounded"
                     style="max-width:600px; max-height:400px; object-fit:contain; cursor: zoom-in;" />

                <div class="mb-3 text-start">
                    <label for="modalAlt" class="form-label">AltText</label>
                    <input type="text" id="modalAlt" class="form-control" />
                </div>
                <div class="mb-3 text-start">
                    <label for="modalCaption" class="form-label">Caption</label>
                    <textarea id="modalCaption" class="form-control" rows="2"></textarea>
                </div>
                <div class="form-check form-switch text-start mb-3">
                    <input class="form-check-input" type="checkbox" id="modalIsActive" />
                    <label class="form-check-label" for="modalIsActive">是否啟用</label>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="button" id="confirmMetaBtn" class="btn btn-primary">確定</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("/Views/Shared/_SweetAlertPartial.cshtml")

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // === Modal ===
            const modal = new bootstrap.Modal(document.getElementById("imgMetaModal"));
            const modalImg = document.getElementById("modalImg");
            const modalAlt = document.getElementById("modalAlt");
            const modalCaption = document.getElementById("modalCaption");
            const modalIsActive = document.getElementById("modalIsActive"); // 新增開關
            const confirmBtn = document.getElementById("confirmMetaBtn");

            // === DOM 元素 ===
            const resetBtn = document.getElementById("resetBtn");
            const selectBtn = document.getElementById("selectBtn");
            const fileInput = document.getElementById("fileInput");
            const preview = document.getElementById("preview");
            const previewArea = document.getElementById("previewArea");
            const dropArea = document.getElementById("dropArea");
            const hiddenInputs = document.getElementById("hiddenInputs");

            // === 工具函式 ===
            function showReset() {
                if (resetBtn) resetBtn.classList.remove("d-none");
            }

            function togglePreviewArea(show) {
                if (previewArea) {
                    previewArea.classList.toggle("d-none", !show);
                }
            }

            // === 啟用/停用按鈕 ===
            window.toggleActive = async function (fileId, btn) {
                const isCurrentlyActive = btn.textContent.trim() === "停用";
                const newState = !isCurrentlyActive;

                const confirm = await Swal.fire({
                    title: newState ? "要啟用這張圖片嗎？" : "要停用這張圖片嗎？",
                    text: newState ? "啟用後，此圖片會重新顯示。" : "停用後，前台將不再顯示此圖片。",
                    icon: "question",
                    showCancelButton: true,
                    confirmButtonText: "確定",
                    cancelButtonText: "取消"
                });

                if (!confirm.isConfirmed) return;

                try {
                    const res = await fetch(`/SYS/UploadTest/UpdateMeta`, {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({
                            FileId: fileId,
                            IsActive: newState
                        })
                    });

                    const data = await res.json();

                    if (data.success) {
                        const item = btn.closest(".img-item");
                        const img = item.querySelector("img");

                        // 更新畫面狀態
                        item.classList.toggle("inactive", !newState);
                        img.dataset.isActive = newState.toString();
                        btn.textContent = newState ? "停用" : "啟用";

                        Swal.fire({
                            title: newState ? "已啟用" : "已停用",
                            icon: "success",
                            showConfirmButton: false,
                            timer: 1000
                        });
                    } else {
                        Swal.fire("❌ 更新失敗", data.message || "", "error");
                    }
                } catch (err) {
                    Swal.fire("❌ 錯誤", "伺服器連線失敗或回傳格式錯誤", "error");
                    console.error("toggleActive 錯誤：", err);
                }
            };

            // === 圖片預覽 ===
            function showPreview(files) {
                const currentCount = preview.children.length;
                const startIndex = currentCount;

                [...files].forEach((file, i) => {
                    if (!file.type.startsWith("image/")) return;

                    const index = startIndex + i;
                    const reader = new FileReader();

                    reader.onload = e => {
                        const wrapper = document.createElement("div");
                        wrapper.className = "img-item";

                        wrapper.innerHTML = `
                            <img src="${e.target.result}" alt="" class="preview-img" />
                            <button type="button" class="btn-close-custom" aria-label="Close">
                                <i class="bi bi-x-lg"></i>
                            </button>
                            <input type="text" class="form-control mt-2 alt-input"
                                   placeholder="AltText (必填)" name="Meta[${index}].AltText" required>
                            <textarea class="form-control mt-2 caption-input"
                                      placeholder="Caption (必填)" name="Meta[${index}].Caption" required></textarea>
                        `;

                        // 移除預覽圖按鈕
                        wrapper.querySelector(".btn-close-custom").addEventListener("click", () => {
                            wrapper.remove();
                            showReset();
                            if (preview.children.length === 0) togglePreviewArea(false);
                        });

                        preview.appendChild(wrapper);

                        // 隱藏 input 存檔案
                        const dataTransfer = new DataTransfer();
                        dataTransfer.items.add(file);

                        const fileInput = document.createElement("input");
                        fileInput.type = "file";
                        fileInput.name = `Meta[${index}].File`;
                        fileInput.files = dataTransfer.files;
                        fileInput.hidden = true;
                        hiddenInputs.appendChild(fileInput);
                    };

                    reader.readAsDataURL(file);
                });

                if (files.length > 0) {
                    togglePreviewArea(true);
                    showReset();
                }
            }

            // === 拖拉區塊 ===
            if (dropArea) {
                ["dragenter", "dragover", "dragleave", "drop"].forEach(evtName => {
                    dropArea.addEventListener(evtName, e => {
                        e.preventDefault();
                        e.stopPropagation();
                    });
                });

                ["dragenter", "dragover"].forEach(evtName => {
                    dropArea.addEventListener(evtName, () => dropArea.classList.add("bg-info", "bg-opacity-25"));
                });
                ["dragleave", "drop"].forEach(evtName => {
                    dropArea.addEventListener(evtName, () => dropArea.classList.remove("bg-info", "bg-opacity-25"));
                });

                dropArea.addEventListener("drop", e => {
                    const files = e.dataTransfer.files;
                    if (files.length > 0) showPreview(files);
                });
            }

            // === 選擇檔案 ===
            if (selectBtn && fileInput) {
                selectBtn.addEventListener("click", () => fileInput.click());
                fileInput.addEventListener("change", () => {
                    if (fileInput.files.length > 0) {
                        showPreview(fileInput.files);
                        fileInput.value = ""; // 允許重選相同檔案
                    }
                });
            }

            // === 編輯圖片資訊 (開啟 Modal) ===
            document.querySelectorAll(".thumb-clickable").forEach(img => {
                const parentButton = img.closest(".img-item")?.querySelector(".btn-close-custom");
                const fileId = parentButton?.getAttribute("onclick")?.match(/\d+/)?.[0];
                img.dataset.fileId = fileId || "";

                img.addEventListener("click", function () {
                    modalImg.src = this.src;
                    modalImg.alt = this.alt;
                    modalAlt.value = this.dataset.alt || "";
                    modalCaption.value = this.dataset.caption || "";
                    modalIsActive.checked = this.dataset.isActive === "true";
                    modalImg.dataset.fileId = this.dataset.fileId;
                    modal.show();
                });
            });

            // === 點擊 Modal 內的圖片 → 直接另開原圖網址 ===
            modalImg.addEventListener("click", function (e) {
                e.preventDefault();
                e.stopPropagation();

                const imgUrl = this.src;
                if (!imgUrl) return;

                // 直接開新分頁顯示原圖
                window.open(imgUrl, "_blank");
            });

            // === 確認更新 (Modal 確定) ===
            if (confirmBtn) {
                confirmBtn.addEventListener("click", async function () {
                    const fileId = modalImg.dataset.fileId;
                    const altText = modalAlt.value.trim();
                    const caption = modalCaption.value.trim();

                    if (!fileId) {
                        Swal.fire("⚠️ 找不到圖片 ID，無法更新", "", "warning");
                        return;
                    }

                    try {
                        const isActive = modalIsActive.checked;

                        const res = await fetch(`${window.location.origin}/SYS/UploadTest/UpdateMeta`, {
                            method: "POST",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify({
                                FileId: parseInt(fileId),
                                AltText: altText,
                                Caption: caption,
                                IsActive: isActive
                            })
                        });

                        const data = await res.json();

                        if (data.success) {
                            Swal.fire("✅ 更新成功", "", "success");

                            // ✅ 傳進所有需要更新的資料
                            updateImageState(fileId, altText, caption, isActive);

                            modal.hide();
                        } else {
                            Swal.fire("❌ 更新失敗", data.message || "", "error");
                        }
                    } catch (err) {
                        Swal.fire("❌ 錯誤", "無法連線至伺服器或回傳格式錯誤", "error");
                        console.error("更新錯誤：", err);
                    }
                });
            }

            // ✅ 共用更新函式（可供 Modal 與 toggleActive 共用）
            function updateImageState(fileId, altText, caption, isActive) {
                const img = document.querySelector(`.thumb-clickable[data-file-id="${fileId}"]`);
                if (!img) return;

                img.alt = altText;
                img.dataset.alt = altText;
                img.dataset.caption = caption;
                img.dataset.isActive = isActive.toString();

                // 動態標記出啟用／停用狀態
                const parent = img.closest(".img-item");
                parent.classList.toggle("inactive", !isActive);

                // 更新按鈕文字
                const toggleBtn = parent.querySelector(".toggle-active-btn");
                if (toggleBtn) {
                    toggleBtn.textContent = isActive ? "停用" : "啟用";
                }
            }

            // === 刪除圖片 ===
            window.deleteFile = async function (fileId) {
                const confirm = await Swal.fire({
                    title: "確定刪除？",
                    text: "此圖片將從 Cloudinary 與資料庫永久移除",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "刪除",
                    cancelButtonText: "取消"
                });
                if (!confirm.isConfirmed) return;

                const res = await fetch(`/SYS/UploadTest/DeleteFile`, {
                    method: "POST",
                    headers: { "Content-Type": "application/x-www-form-urlencoded" },
                    body: new URLSearchParams({ fileId })
                });
                const data = await res.json();

                if (data.success) {
                    Swal.fire({
                        title: "✅ 刪除成功",
                        icon: "success",
                        showConfirmButton: false,
                        timer: 1000
                    });

                    // 1. 直接從畫面移除該圖片
                    const targetImg = document.querySelector(`.thumb-clickable[data-file-id="${fileId}"]`);
                    if (targetImg) {
                        const parent = targetImg.closest(".img-item");
                        if (parent) parent.remove();
                    }

                    // 2. 若全部圖片都刪完，就隱藏外層區域
                    const grid = document.querySelector("form > div.img-grid");
                    if (grid && grid.children.length === 0) {
                        grid.innerHTML = `<p class="text-muted">目前沒有圖片。</p>`;
                    }
                } else {
                    Swal.fire("❌ 刪除失敗", data.message || "", "error");
                }
            };
        });
    </script>
}
