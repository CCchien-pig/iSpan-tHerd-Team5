@using tHerdBackend.Core.DTOs
@using System.Linq
@model List<SysAssetFileDto>

@{
    const string updateApiUrl = "/SYS/Images/UpdateFile";
    const string deleteApiUrl = "/SYS/Images/DeleteFile";
}

<h2>@ViewData["Title"]</h2>

<!-- 🔹 上傳模組（Modal） -->
@await Component.InvokeAsync("UploadImageModal", new {
    moduleId = ViewContext.RouteData.Values["area"],
    progId = ViewContext.RouteData.Values["controller"]
})

<!-- 🔹 檔案清單容器（Partial 可被 AJAX 刷新） -->
<div id="fileListContainer">
    <!-- 預設先留空，讓 JS 初次載入時顯示全域遮罩 -->
</div>

<!-- 編輯圖片 -->
@await Component.InvokeAsync("UpdateImage", new { 
    title = "圖片資訊",
    file = new SysAssetFileDto()
})

<!-- 🔹 全域 Loading 遮罩 Partial -->
@await Html.PartialAsync("_GlobalLoadingPartial")

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", async function () {
            // 初始化上傳模組
            if (window.UploadImageModal?.init) {
                UploadImageModal.init("uploadImageModal");
            }

            // === ✅ 顯示全域遮罩 ===
            if (typeof showLoading === "function") {
                showLoading("載入中，請稍候...");
            }

            try {
                // 呼叫初次載入函式（由 update-image.js 提供）
                if (typeof refreshFileList === "function") {
                    await refreshFileList();
                } else {
                    console.warn("⚠️ 找不到 refreshFileList()");
                }
            } catch (err) {
                console.error("❌ 初次載入失敗：", err);
                Swal.fire("錯誤", "載入圖片列表時發生問題", "error");
            } finally {
                // === ✅ 隱藏全域遮罩 ===
                if (typeof hideLoading === "function") {
                    hideLoading();
                }
            }

            // Debug：確認全域遮罩存在
            const loader = document.getElementById("globalLoading");
            if (!loader) {
                console.warn("⚠️ 找不到 #globalLoading，請確認 _GlobalLoadingPartial 有正確載入。");
            }
        });
    </script>
}
