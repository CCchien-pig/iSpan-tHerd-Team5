@model X.PagedList.IPagedList<FlexBackend.CNT.Rcl.Areas.CNT.ViewModels.ScheduleListVM>
@using X.PagedList.Mvc.Core

<h2>排程管理</h2>

<!-- 🔍 篩選表單 (省略, 你的原本那段就好) -->

<table class="table table-striped table-bordered table-hover align-middle shadow-sm">
    <thead class="table-dark">
        <tr>
            <th>ID</th>
            <th>文章標題</th>
            <th>分類</th>
            <th>動作</th>
            <th>預定時間</th>
            <th>狀態</th>
            <th>操作</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.ScheduleId</td>
                <td>@item.PageTitle</td>
                <td>@item.PageTypeName</td>
                <td>@item.ActionType</td>
                <td>@item.ScheduledDate.ToString("yyyy-MM-dd HH:mm")</td>
                <td>@item.Status</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ScheduleId"
                       asp-route-page="@Model.PageNumber"
                       asp-route-pageSize="@Model.PageSize"
                       asp-route-keyword="@ViewBag.Keyword"
                       asp-route-status="@ViewBag.Status"
                       asp-route-pageTypeId="@ViewBag.PageTypeId"
                       class="btn btn-sm btn-outline-warning">✏️ 編輯</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- 📊 分頁統計區塊 -->
<div class="d-flex justify-content-center mb-2 text-muted">
    顯示第 <strong>@Model.FirstItemOnPage</strong> - <strong>@Model.LastItemOnPage</strong> 筆，
    共 <strong>@Model.TotalItemCount</strong> 筆資料
    （每頁 <strong>@Model.PageSize</strong> 筆，共 <strong>@Model.PageCount</strong> 頁）
</div>

<!-- 📌 分頁器 -->
<div class="d-flex justify-content-center">
    @Html.PagedListPager(
    Model,
    page => Url.Action("Index", new
    {
        page,  // ← 這裡最重要！
        keyword = ViewBag.Keyword,
        status = ViewBag.Status,
        pageSize = Model.PageSize,
        pageTypeId = ViewBag.PageTypeId
    }),
        new PagedListRenderOptions
        {
            DisplayLinkToFirstPage = PagedListDisplayMode.Always,
            DisplayLinkToLastPage = PagedListDisplayMode.Always,
            DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
            DisplayLinkToNextPage = PagedListDisplayMode.Always,
            UlElementClasses = new[] { "pagination" },
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" }
        })

</div>
