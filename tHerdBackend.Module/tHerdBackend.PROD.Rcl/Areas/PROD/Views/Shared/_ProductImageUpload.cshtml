@using tHerdBackend.Core.DTOs
@using tHerdBackend.Core.DTOs.PROD
@model IEnumerable<ProductImageDto>

<div class="mb-3">
    <label class="form-label fw-bold">產品圖片</label>
    <!-- 🔹 選擇圖片（從共用 Images 模組中挑圖綁定） -->
    <button type="button" class="btn btn-outline-primary btn-sm mt-2" id="btnBindProductImage">
        <i class="bi bi-images"></i> 選擇圖片
    </button>

    <!-- 🔹 已綁定圖片清單 -->
    <div class="mt-3">
        <h6 class="fw-bold">已綁定圖片</h6>
        <div id="boundImages" class="d-flex flex-wrap gap-3">
            @if (Model != null && Model.Any())
            {
                foreach (var img in Model.Select((x, i) => new { x, i }))
                {
                    <div class="position-relative" style="width:120px; height:120px;">
                        <img src="@img.x.FileUrl"
                             alt="@img.x.AltText"
                             class="img-thumbnail w-100 h-100 thumb-clickable"
                             data-file-id="@img.x.ImageId"
                             data-file-url="@img.x.FileUrl"
                             data-alt-text="@img.x.AltText"
                             data-caption="@img.x.AltText"
                             data-is-active="true"
                             data-mime-type="image/jpeg"
                             data-update-api="/SYS/Images/UpdateFile"
                             style="object-fit:cover; cursor:pointer;" />

                        <!-- 編輯 -->
                        <button type="button"
                                class="btn btn-sm btn-outline-primary position-absolute bottom-0 start-0"
                                onclick="editBoundImage(this)">
                            <i class="bi bi-pencil"></i>
                        </button>

                        <!-- 移除綁定 -->
                        <button type="button"
                                class="btn btn-sm btn-danger position-absolute top-0 end-0"
                                onclick="removeBoundImage(this)">
                            <i class="bi bi-x"></i>
                        </button>

                        <!-- 後端綁定對應 -->
                        <input type="hidden" name="Images[@img.i].ImageId" value="@img.x.ImageId" />
                        <input type="hidden" name="Images[@img.i].FileUrl" value="@img.x.FileUrl" />
                        <input type="hidden" name="Images[@img.i].AltText" value="@img.x.AltText" />
                        <input type="hidden" name="Images[@img.i].OrderSeq" value="@img.x.OrderSeq" />
                    </div>
                }
            }
            else
            {
                <span class="text-muted">尚未綁定圖片</span>
            }
        </div>
    </div>
</div>

<!-- 🔹 編輯圖片資訊 Modal -->
@await Component.InvokeAsync("UpdateImage", new {
modalId = "imgMetaModal",
    title = "圖片資訊",
    file = new SysAssetFileDto(),
    updateApiUrl = "/SYS/Images/UpdateFile",
    deleteApiUrl = "/SYS/Images/DeleteFile"
})

<!-- 🔹 圖片選擇器 Modal（取代舊 _ImageSelectorModal） -->
@await Html.PartialAsync("_FileSelectPartial", new List<SysAssetFileDto>())

<script>
    // === 防止任何 modal 裡的按鈕誤觸表單提交 ===
    document.addEventListener("click", function (e) {
        const btn = e.target.closest("button");
        if (!btn) return;

        // 只攔截：在 form 裡 & 在 modal 裡 & 沒明確 type 或 type=submit 的按鈕
        const isInModal = btn.closest(".modal");
        const isInForm = btn.closest("form");

        if (isInModal && isInForm && (!btn.type || btn.type.toLowerCase() === "submit")) {
            e.preventDefault();
            console.warn("🛑 已攔截 modal 誤觸提交：", btn);
        }
    }, true);

    document.addEventListener("DOMContentLoaded", () => {
        // === 綁定產品圖片（從共用 Images 模組選取） ===
        document.getElementById("btnBindProductImage")?.addEventListener("click", () => {
            if (typeof openImageSelector === "function") {
                openImageSelector(
                    selectedFiles => {
                        console.log("已選取:", selectedFiles);
                    },
                    "PROD",
                    "Products"
                );

            } else {
                Swal.fire("錯誤", "找不到圖片選擇器模組 (openImageSelector)", "error");
            }
            });
    });

    // === 🖋️ 編輯圖片資訊 ===
    function editBoundImage(btn) {
        const container = btn.closest(".position-relative");
        const img = container.querySelector("img");

        if (!img) {
            Swal.fire("錯誤", "找不到圖片元素", "error");
            return;
        }

        const fileData = {
            fileId: img.dataset.fileId,
            fileUrl: img.dataset.fileUrl,
            altText: img.dataset.altText,
            caption: img.dataset.caption || "",
            mimeType: img.dataset.mimeType || "image/jpeg",
            isActive: true
        };

        // ✅ 呼叫共用更新模組（update-image-modal.js）
        if (typeof openImageModal === "function") {
            openImageModal(fileData, "#imgMetaModal");
        } else {
            Swal.fire("錯誤", "找不到圖片編輯模組", "error");
        }
    }

    // === ❌ 移除綁定圖片 ===
    function removeBoundImage(btn) {
        btn.closest("div").remove();

        // 重新命名 input 索引
        document.querySelectorAll("#boundImages input[name]").forEach((inp, i) => {
            inp.name = inp.name.replace(/Images\[\d+\]/, `Images[${i}]`);
        });

        // 若都刪光 → 顯示 placeholder
        const list = document.getElementById("boundImages");
        if (!list.querySelector("img")) {
            list.innerHTML = '<span class="text-muted">尚未綁定圖片</span>';
        }
    }
</script>
