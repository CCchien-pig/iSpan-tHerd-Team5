@using tHerdBackend.Core.DTOs
@using tHerdBackend.Core.DTOs.PROD
@model IEnumerable<ProductImageDto>

<div class="mb-3">
    <label class="form-label fw-bold">產品圖片</label>

    <!-- 🔹 選擇圖片（從共用 Images 模組中挑圖綁定） -->
    <button type="button" class="btn btn-outline-primary btn-sm mt-2" id="btnBindProductImage">
        <i class="bi bi-images"></i> 選擇圖片
    </button>

    <!-- 🔹 已綁定圖片清單 -->
    <div class="mt-3">
        <h6 class="fw-bold">已綁定圖片</h6>
        <div id="boundImages" class="d-flex flex-wrap gap-3">
            @if (Model != null && Model.Any())
            {
                foreach (var img in Model.Select((x, i) => new { x, i }))
                {
                    <div class="position-relative" style="width:120px; height:120px;">
                        <img src="@img.x.FileUrl"
                             alt="@img.x.AltText"
                             class="img-thumbnail w-100 h-100 thumb-clickable"
                             data-file-id="@img.x.ImageId"
                             data-file-url="@img.x.FileUrl"
                             data-alt-text="@img.x.AltText"
                             data-caption="@img.x.AltText"
                             style="object-fit:cover; cursor:pointer;" />

                        <!-- 編輯 -->
                        <button type="button"
                                class="btn btn-sm btn-outline-primary position-absolute bottom-0 start-0"
                                onclick="editBoundImage(this)">
                            <i class="bi bi-pencil"></i>
                        </button>

                        <!-- 移除 -->
                        <button type="button"
                                class="btn btn-sm btn-danger position-absolute top-0 end-0"
                                onclick="removeBoundImage(this)">
                            <i class="bi bi-x"></i>
                        </button>

                        <!-- 後端綁定 -->
                        <input type="hidden" name="Images[@img.i].ImageId" value="@img.x.ImageId" />
                        <input type="hidden" name="Images[@img.i].FileUrl" value="@img.x.FileUrl" />
                        <input type="hidden" name="Images[@img.i].AltText" value="@img.x.AltText" />
                        <input type="hidden" name="Images[@img.i].OrderSeq" value="@img.x.OrderSeq" />
                    </div>
                }
            }
            else
            {
                <span class="text-muted">尚未綁定圖片</span>
            }
        </div>
    </div>
</div>

<!-- 🔹 圖片選擇器 Modal（含上傳功能） -->
@await Html.PartialAsync("_FileSelectPartial", new List<SysAssetFileDto>())

<script>
    document.addEventListener("DOMContentLoaded", () => {
        console.log("🟣 ProductImageUpload ready");

        const btnSelect = document.getElementById("btnBindProductImage");

        // === 綁定圖片選擇器 ===
        if (btnSelect) {
            btnSelect.addEventListener("click", e => {
                e.preventDefault();
                if (typeof openImageSelector === "function") {
                    openImageSelector(selectedFiles => {
                        console.log("🖼️ 已選取:", selectedFiles);
                        appendSelectedImages(selectedFiles);
                    }, "PROD", "Products");
                } else {
                    Swal.fire("錯誤", "找不到圖片選擇器模組 openImageSelector", "error");
                }
            });
        }

        // ✅ 初始化上傳模組（統一不帶參數）
        if (window.UploadImageModal && typeof UploadImageModal.init === "function") {
            UploadImageModal.init();
            console.log("✅ UploadImageModal initialized");
        } else {
            console.warn("⚠️ UploadImageModal.init 未定義");
        }
    });

    // === 動態插入選取圖片 ===
    function appendSelectedImages(selectedFiles) {
        const list = document.getElementById("boundImages");
        if (!selectedFiles?.length) return;

        if (list.querySelector("span.text-muted")) list.innerHTML = "";

        selectedFiles.forEach(f => {
            const idx = list.querySelectorAll(".position-relative").length;
            const div = document.createElement("div");
            div.className = "position-relative";
            div.style = "width:120px;height:120px;";
            div.innerHTML = `
                <img src="${f.fileUrl}" class="img-thumbnail w-100 h-100" style="object-fit:cover;cursor:pointer;">
                <button type="button" class="btn btn-sm btn-outline-primary position-absolute bottom-0 start-0"
                    onclick="editBoundImage(this)"><i class="bi bi-pencil"></i></button>
                <button type="button" class="btn btn-sm btn-danger position-absolute top-0 end-0"
                    onclick="removeBoundImage(this)"><i class="bi bi-x"></i></button>
                <input type="hidden" name="Images[${idx}].FileUrl" value="${f.fileUrl}">
                <input type="hidden" name="Images[${idx}].AltText" value="${f.altText || ''}">
                <input type="hidden" name="Images[${idx}].ImageId" value="${f.fileId || 0}">
            `;
            list.appendChild(div);
        });
    }

    // === 編輯圖片資訊 ===
    function editBoundImage(btn) {
        const container = btn.closest(".position-relative");
        const img = container.querySelector("img");
        if (!img) return Swal.fire("錯誤", "找不到圖片元素", "error");

        const fileData = {
            fileId: img.dataset.fileId || 0,
            fileUrl: img.src,
            altText: img.alt || "",
            caption: img.dataset.caption || "",
            mimeType: "image/jpeg",
            isActive: true
        };

        if (typeof openImageModal === "function") {
            openImageModal(fileData, "#imgMetaModal");
        } else {
            Swal.fire("錯誤", "找不到圖片編輯模組", "error");
        }
    }

    // === 移除圖片 ===
    function removeBoundImage(btn) {
        btn.closest("div").remove();
        document.querySelectorAll("#boundImages input[name]").forEach((inp, i) => {
            inp.name = inp.name.replace(/Images\[\d+\]/, `Images[${i}]`);
        });
        const list = document.getElementById("boundImages");
        if (!list.querySelector("img")) {
            list.innerHTML = '<span class="text-muted">尚未綁定圖片</span>';
        }
    }
</script>
