@model FlexBackend.ORD.Rcl.Areas.ORD.ViewModels.OrderListVM
@{
    ViewData["Title"] = "訂單管理";
}

@section Styles {
    <link href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" rel="stylesheet" />
    <style>
        /* ===== 你的原先樣式（明細卡等） ===== */
        td.order-toggle {
            cursor: pointer;
            color: #0d6efd;
            text-decoration: underline;
        }

        tr.shown td.order-toggle {
            font-weight: bold;
        }

        .order-detail-card {
            background: #f9f9f9;
            padding: 1rem;
            margin-bottom: 1rem;
            border-radius: .5rem;
            border: 1px solid #ddd;
        }

        .order-summary {
            text-align: right;
            margin-top: 1rem;
        }

        #jumpPageInput {
            width: 80px;
            display: inline-block;
            text-align: center;
        }

        th.no-sort::after {
            display: none !important;
        }

        /* ==== 整列Hover/選取高亮（作用在 td/th，而不是 tr） ==== */
        :root {
            --brand: #652D77;
            --row-hover: #f3e8ff;
            --row-even: #f8fafc;
        }

        /* 斑馬紋（可留可不留；要壓過 table-striped 必須作用在 cell） */
        table.rcl-table > tbody > tr:nth-of-type(even) > * {
            background: var(--row-even) !important;
        }

        /* 列 hover：所有 cell 一起變色 */
        table.rcl-table > tbody > tr:hover > *,
        table.rcl-table > tbody > tr.is-selected > * {
            background: var(--row-hover) !important;
        }

        /* 第一格做左側色條，不位移（預留透明邊框） */
        table.rcl-table > tbody > tr > *:first-child {
            border-left: 4px solid transparent;
        }

        table.rcl-table > tbody > tr:hover > *:first-child,
        table.rcl-table > tbody > tr.is-selected > *:first-child {
            border-left-color: var(--brand);
        }

        /* 平滑過渡 */
        table.rcl-table > tbody > tr > * {
            transition: background-color .18s ease, border-left-color .18s ease;
        }

        /* DataTables child 明細列別吃 hover */
        table.rcl-table > tbody > tr.child > * {
            background: inherit !important;
            border-left-color: transparent !important;
        }

        /* SweetAlert2：批次視窗尺寸與內距修正 */
        .rcl-bulk .swal2-html-container {
            padding: 0 1rem !important;
            max-height: 70vh;
            overflow: auto;
        }

        .rcl-bulk select {
            width: 100%;
            max-width: 100%;
            box-sizing: border-box;
        }
        /* 避免100%+邊框造成橫向捲軸 */
        .rcl-bulk label {
            display: flex;
            align-items: center;
            gap: .5rem;
        }

        .rcl-bulk .swal2-actions {
            gap: .5rem;
        }

        /* ===== 狀態徽章（保留，可依需要使用） ===== */
        .badge-status {
            display: inline-block;
            padding: .35rem .6rem;
            border-radius: .5rem;
            color: #fff;
            font-weight: 600;
            white-space: nowrap
        }

        .payment-paid {
            background: #22c55e
        }

        .payment-auth, .payment-pending {
            background: #f59e0b
        }

        .payment-failed {
            background: #ef4444
        }

        .payment-refunding, .payment-refunded {
            background: #6b7280
        }

        .shipping-picking, .shipping-packed {
            background: #a78bfa
        }

        .shipping-shipped, .shipping-intransit {
            background: #10b981
        }

        .shipping-delivered {
            background: #059669
        }

        .shipping-returned {
            background: #6b7280
        }

        .order-pending {
            background: #8b5cf6
        }

        .order-confirmed, .order-processing {
            background: #3b82f6
        }

        .order-completed {
            background: #6b7280
        }

        .order-cancelled {
            background: #ef4444
        }

        .order-rmaing {
            background: #7c3aed
        }

        .detail-row td {
            background: #fff;
            border-top: 0;
        }
    </style>
}

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 text-purple2">訂單清單查詢</h6>
    </div>

    <div class="card-body">

        <!-- 批次操作（保留你原本的兩顆主按鈕） -->
        <div class="mb-3">
            <button type="button" id="bulkUpdate" class="btn btn-warning">批量更改狀態</button>
            <button type="button" id="bulkPrint" class="btn btn-success">列印出貨單</button>
        </div>

        <!-- 篩選（即時跳轉版） -->
        <form id="searchForm" asp-action="Index" method="get" class="row g-2 mb-3 align-items-end">
            <div class="col-md-3">
                <label class="form-label fw-bold">關鍵字</label>
                <input type="text" class="form-control" name="Keyword" placeholder="輸入訂單編號/收件人/電話" value="@Model.SearchParams.Keyword" />
            </div>
            <div class="col-md-2">
                <label class="form-label fw-bold">付款狀態</label>
                <select class="form-select" name="PaymentStatus">
                    <option value="">全部</option>
                    @foreach (var option in Model.PaymentStatusOptions)
                    {
                        <option value="@option.Value" selected="@(option.Value == Model.SearchParams.PaymentStatus)">@option.Text</option>
                    }
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label fw-bold">配送狀態</label>
                <select class="form-select" name="ShippingStatusId">
                    <option value="">全部</option>
                    @foreach (var option in Model.ShippingStatusOptions)
                    {
                        <option value="@option.Value" selected="@(option.Value == Model.SearchParams.ShippingStatusId)">@option.Text</option>
                    }
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label fw-bold">訂單狀態</label>
                <select class="form-select" name="OrderStatusId">
                    <option value="">全部</option>
                    @foreach (var option in Model.OrderStatusOptions)
                    {
                        <option value="@option.Value" selected="@(option.Value == Model.SearchParams.OrderStatusId)">@option.Text</option>
                    }
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label fw-bold">每頁筆數</label>
                <select class="form-select" name="PageSize">
                    @foreach (var size in Model.Pagination.PageSizeOptions)
                    {
                        <option value="@size" selected="@(size == Model.SearchParams.PageSize)">@size</option>
                    }
                </select>
            </div>
            <div class="col-md-1 d-grid">
                <label class="form-label">&nbsp;</label>
                <button type="submit" class="btn btn-primary">套用</button> <!-- 可留作手動觸發；平常不必按 -->
            </div>
        </form>

        <!-- 主表格（移除操作欄） -->
        <div class="table-responsive">
            <table id="ordersTable" class="table table-bordered table-striped rcl-table" width="100%">
                <thead>
                    <tr>
                        <th class="no-sort"><input type="checkbox" id="selectAll" /></th>
                        <th>訂單編號</th>
                        <th>會員姓名</th>
                        <th>付款狀態</th>
                        <th>配送狀態</th>
                        <th>訂單狀態</th>
                        <th>總金額</th>
                        <th>建立時間</th>
                        <th>前台顯示</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in Model.Orders)
                    {
                        <tr data-id="@order.OrderId">
                            <td><input type="checkbox" class="row-check" value="@order.OrderId" /></td>
                            <td class="order-toggle">@order.OrderNo</td>
                            <td>@order.UserName</td>
                            <td>
                                <select class="form-select form-select-sm status-dropdown" data-id="@order.OrderId" data-field="PaymentStatus">
                                    @foreach (var option in Model.PaymentStatusOptions)
                                    {
                                        <option value="@option.Value" selected="@(option.Value == order.PaymentStatus)">@option.Text</option>
                                    }
                                </select>
                            </td>
                            <td>
                                <select class="form-select form-select-sm status-dropdown" data-id="@order.OrderId" data-field="ShippingStatusId">
                                    @foreach (var option in Model.ShippingStatusOptions)
                                    {
                                        <option value="@option.Value" selected="@(option.Value == order.ShippingStatusId)">@option.Text</option>
                                    }
                                </select>
                            </td>
                            <td>
                                <select class="form-select form-select-sm status-dropdown" data-id="@order.OrderId" data-field="OrderStatusId">
                                    @foreach (var option in Model.OrderStatusOptions)
                                    {
                                        <option value="@option.Value" selected="@(option.Value == order.OrderStatusId)">@option.Text</option>
                                    }
                                </select>
                            </td>
                            <td>@order.TotalAmount.ToString("C0")</td>
                            <td>@order.CreatedDate.ToString("yyyy-MM-dd HH:mm")</td>
                            <td>
                                <div class="form-check form-switch">
                                    <input class="form-check-input toggle-visible" type="checkbox" data-id="@order.OrderId" @(order.IsVisibleToMember ? "checked" : "")>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- 分頁 -->
        <div class="d-flex align-items-center justify-content-between mt-3">
            <div>總筆數 <strong>@Model.Pagination.TotalCount</strong></div>
            <div class="d-flex align-items-center">
                <button type="button" id="prevPage" class="btn btn-outline-secondary btn-sm me-2">上一頁</button>
                <span class="me-2">第</span>
                <input type="number" id="jumpPageInput" class="form-control" min="1" max="@Model.Pagination.TotalPages" value="@Model.Pagination.CurrentPage" style="width:80px;" />
                <span class="ms-2">/ 共 <strong>@Model.Pagination.TotalPages</strong> 頁</span>
                <button type="button" id="nextPage" class="btn btn-outline-secondary btn-sm ms-2">下一頁</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        // ===== DataTables 初始化 =====
        var table = $('#ordersTable').DataTable({
            paging: false,
            searching: false,
            ordering: true,
            info: false,
            order: [[7, "desc"]],
            columnDefs: [
                { orderable: false, targets: [0, 8] }, 
                {
                    targets: [3, 4, 5], // 以選中 option 的文字排序
                    render: function (data, type) {
                        if (type === 'sort' || type === 'type') {
                            let $el = $('<div>').html(data);
                            return $el.find("option:selected").text();
                        }
                        return data;
                    }
                },
                {
                    targets: 6, // 金額欄位數值化排序
                    render: function (data, type) {
                        if (type === 'sort' || type === 'type') {
                            return parseFloat(String(data).replace(/[^\d.-]/g, '')) || 0;
                        }
                        return data;
                    }
                }
            ]
        });

        // ===== 搜尋列：即時跳轉=====
        (function(){
            const $form = $('#searchForm');

            function ensurePageHidden(){
                if($form.find('input[name="PageNumber"]').length === 0){
                    $('<input type="hidden" name="PageNumber" value="1">').appendTo($form);
                }else{
                    $form.find('input[name="PageNumber"]').val('1');
                }
            }

            $form.find('select').on('change', function(){
                ensurePageHidden();
                $form.trigger('submit');
            });

            let keyTimer = null;
            const $kw = $form.find('input[name="Keyword"]');
            $kw.on('input', function(){
                clearTimeout(keyTimer);
                keyTimer = setTimeout(function(){
                    ensurePageHidden();
                    $form.trigger('submit');
                }, 400);
            }).on('keypress', function(e){ if(e.which === 13){ e.preventDefault(); }});
        })();

        // ===== 單筆狀態即時更新 =====
        $(document).on("change", ".status-dropdown", function () {
            const $select = $(this);
            const id = $select.data("id");
            const field = $select.data("field");
            const value = $select.val();
            const $tr = $select.closest('tr');
            const row = table.row($tr);

            $.post("@Url.Action("UpdateOrderStatus", "Orders", new { area = "ORD" })",
                { orderId: id, field: field, value: value },
                function (res) {
                    if (res.success) {
                        Swal.fire({ icon: 'success', title: '更新成功', showConfirmButton: false, timer: 900 });

                        // 若改為 shipped 且當前明細展開(=child row 顯示)，重載明細以顯示 TrackingNumber
                        if (field === 'ShippingStatusId' && String(value).toLowerCase() === 'shipped' && row.child.isShown()) {
                            loadDetail($tr, id, row);
                        }
                    } else {
                        Swal.fire({ icon: 'error', title: '更新失敗', text: res.message || '請稍後再試' });
                    }
                }
            ).fail(function () {
                Swal.fire({ icon: 'error', title: '系統錯誤', text: '無法更新狀態' });
            });
        });

        // ===== 前台顯示：切換 =====
        $(document).on("change", ".toggle-visible", function () {
            const $checkbox = $(this);
            const id = $checkbox.data("id");
            const visible = $checkbox.is(":checked");

            $.post("@Url.Action("ToggleVisible", "Orders", new { area = "ORD" })",
                { orderId: id, visible: visible },
                function (res) {
                    if (res.success) {
                        Swal.fire({ icon: 'success', title: visible ? '已設為顯示' : '已設為隱藏', showConfirmButton: false, timer: 1200 });
                    } else {
                        Swal.fire({ icon: 'error', title: '更新失敗', text: res.message || '請稍後再試' });
                        $checkbox.prop("checked", !visible);
                    }
                }
            ).fail(() => {
                Swal.fire({ icon: 'error', title: '系統錯誤', text: '無法更新狀態' });
                $checkbox.prop("checked", !visible);
            });
        });

        // ===== 批量更改（視窗：預設「請選擇」；按鈕=更新/取消）=====
        // 批量更改（小尺寸視窗 + 禁止橫向捲軸 + 按鈕=更新/取消）
        $("#bulkUpdate").on("click", function () {
          var ids = getSelectedOrders();
          if (ids.length === 0) { Swal.fire("請先選擇訂單", "", "warning"); return; }

          Swal.fire({
            title: "批量更改狀態",
            width: 'min(92vw, 520px)',        // ← 視窗縮小，手機時最多 92vw
            heightAuto: false,                // ← 避免 body 捲軸造成位移
            scrollbarPadding: false,
            customClass: { popup: 'rcl-bulk' }, // ← 套上上面的 CSS
            html: `
              <div>
                <label class="mb-2">
                  <input type="radio" name="bulkType" value="shipping" checked>
                  <span class="ms-2">配送狀態</span>
                </label>
                <select id="bulkShipping" class="swal2-select form-select">
                  <option value="" selected disabled>請選擇</option>
                  @foreach (var option in Model.ShippingStatusOptions)
                {
                        <option value="@option.Value">@option.Text</option>
                  }
                </select>

                <div class="my-3"></div>

                <label class="mb-2">
                  <input type="radio" name="bulkType" value="order">
                  <span class="ms-2">訂單狀態</span>
                </label>
                <select id="bulkOrder" class="swal2-select form-select" disabled>
                  <option value="" selected disabled>請選擇</option>
                  @foreach (var option in Model.OrderStatusOptions)
                {
                        <option value="@option.Value">@option.Text</option>
                  }
            </select>
          </div>
        `,
        didOpen: () => {
          $("input[name='bulkType']").on("change", function () {
            const isShip = $(this).val() === "shipping";
            $("#bulkShipping").prop("disabled", !isShip).val("");
            $("#bulkOrder").prop("disabled", isShip).val("");
          });
        },
        preConfirm: () => {
          const type = $("input[name='bulkType']:checked").val();
          const shipping = $("#bulkShipping").prop("disabled") ? "" : $("#bulkShipping").val();
          const order = $("#bulkOrder").prop("disabled") ? "" : $("#bulkOrder").val();

          if (type === "shipping" && !shipping) { Swal.showValidationMessage("請先選擇「配送狀態」"); return false; }
          if (type === "order" && !order) { Swal.showValidationMessage("請先選擇「訂單狀態」"); return false; }

          return { type, shippingStatus: shipping || null, orderStatus: order || null };
        },
        showCancelButton: true,
        confirmButtonText: "更新",
        cancelButtonText: "取消"
      }).then((result) => {
        if (!result.isConfirmed) return;

        $.post('@Url.Action("BulkUpdateOrders", "Orders", new { area = "ORD" })',
          {
            orderIds: ids,
            shippingStatusId: result.value.type === "shipping" ? result.value.shippingStatus : null,
            orderStatusId: result.value.type === "order" ? result.value.orderStatus : null
          },
          function (res) {
            if (res.success) {
              // 同步每列下拉
              ids.forEach(function (id) {
                let $row = $("tr[data-id='" + id + "']");
                if (result.value.type === "shipping") {
                  $row.find("select[data-field='ShippingStatusId']").val(result.value.shippingStatus).trigger('change');
                } else {
                  $row.find("select[data-field='OrderStatusId']").val(result.value.orderStatus).trigger('change');
                }
              });
              Swal.fire("更新成功", "", "success");
              $(".row-check, #selectAll").prop("checked", false);
            } else {
              Swal.fire("更新失敗", res.message || "", "error");
            }
          }
        ).fail(() => Swal.fire("系統錯誤", "無法更新狀態", "error"));
      });
    });

        // $("#bulkUpdate").on("click", function () {
        //     var ids = getSelectedOrders();
        //     if (ids.length === 0) { Swal.fire("請先選擇訂單", "", "warning"); return; }

        //     Swal.fire({
        //         title: "批量更改狀態",
        //         html: `
        //           <div style="text-align:left">
        //             <label class="mb-2 d-flex align-items-center gap-2">
        //               <input type="radio" name="bulkType" value="shipping" checked>
        //               <span>配送狀態</span>
        //             </label>
        //             <select id="bulkShipping" class="swal2-select" style="width:100%">
        //               <option value="" selected disabled>請選擇</option>
        //               @foreach (var option in Model.ShippingStatusOptions)
        //             {
        //                   <option value="@option.Value">@option.Text</option>
        //               }
        //             </select>

        //             <div class="my-3"></div>

        //             <label class="mb-2 d-flex align-items-center gap-2">
        //               <input type="radio" name="bulkType" value="order">
        //               <span>訂單狀態</span>
        //             </label>
        //             <select id="bulkOrder" class="swal2-select" style="width:100%" disabled>
        //               <option value="" selected disabled>請選擇</option>
        //               @foreach (var option in Model.OrderStatusOptions)
        //             {
        //                   <option value="@option.Value">@option.Text</option>
        //               }
        //             </select>
        //           </div>
        //         `,
        //         didOpen: () => {
        //             $("input[name='bulkType']").on("change", function () {
        //                 const isShip = $(this).val() === "shipping";
        //                 $("#bulkShipping").prop("disabled", !isShip).val("");
        //                 $("#bulkOrder").prop("disabled", isShip).val("");
        //             });
        //         },
        //         focusConfirm: false,
        //         preConfirm: () => {
        //             const type = $("input[name='bulkType']:checked").val();
        //             const shipping = $("#bulkShipping").prop("disabled") ? "" : $("#bulkShipping").val();
        //             const order = $("#bulkOrder").prop("disabled") ? "" : $("#bulkOrder").val();

        //             if (type === "shipping" && !shipping) { Swal.showValidationMessage("請先選擇「配送狀態」"); return false; }
        //             if (type === "order" && !order) { Swal.showValidationMessage("請先選擇「訂單狀態」"); return false; }

        //             return { type, shippingStatus: shipping || null, orderStatus: order || null };
        //         },
        //         showCancelButton: true,
        //         confirmButtonText: "更新",
        //         cancelButtonText: "取消"
        //     }).then((result) => {
        //         if (!result.isConfirmed) return;

        //         $.post('@Url.Action("BulkUpdateOrders", "Orders", new { area = "ORD" })',
        //             {
        //                 orderIds: ids,
        //                 shippingStatusId: result.value.type === "shipping" ? result.value.shippingStatus : null,
        //                 orderStatusId: result.value.type === "order" ? result.value.orderStatus : null
        //             },
        //             function (res) {
        //                 if (res.success) {
        //                     // 同步每列下拉
        //                     ids.forEach(function (id) {
        //                         let $row = $("tr[data-id='" + id + "']");
        //                         if (result.value.type === "shipping") {
        //                             $row.find("select[data-field='ShippingStatusId']").val(result.value.shippingStatus).trigger('change');
        //                         } else {
        //                             $row.find("select[data-field='OrderStatusId']").val(result.value.orderStatus).trigger('change');
        //                         }
        //                     });
        //                     Swal.fire("更新成功", "", "success");
        //                     $(".row-check, #selectAll").prop("checked", false);
        //                 } else {
        //                     Swal.fire("更新失敗", res.message || "", "error");
        //                 }
        //             }
        //         ).fail(() => Swal.fire("系統錯誤", "無法更新狀態", "error"));
        //     });
        // });

        // ===== 批量列印 =====
        $("#bulkPrint").on("click", function () {
            var ids = getSelectedOrders();
            if (ids.length === 0) { Swal.fire("請先選擇訂單", "", "warning"); return; }
            window.open('@Url.Action("PrintOrders", "Orders", new { area = "ORD" })' + "?ids=" + ids.join(","));
        });

        // 勾選 → 加上 .is-selected，方便沿用上面的樣式
        $('#ordersTable').on('change', '.row-check', function(){
          $(this).closest('tr').toggleClass('is-selected', this.checked);
        });
        $('#selectAll').on('click', function(){
          const checked = this.checked;
          $('.row-check').each(function(){ this.checked = checked; }).trigger('change');
        });


        // ===== 點「訂單編號」展開 / 收合明細 =====
        $('#ordersTable tbody').on('click', 'td.order-toggle', function () {
            var $tr = $(this).closest('tr');
            var row = table.row($tr);
            var orderId = $tr.data('id');

            if (row.child.isShown()) {
                row.child.hide();
                $tr.removeClass('shown');
            } else {
                row.child('<div class="text-muted">載入中...</div>').show();
                $tr.addClass('shown');
                loadDetail($tr, orderId, row);
            }
        });

        function loadDetail($tr, orderId, row){
            $.getJSON('@Url.Action("GetOrderDetails", "Orders", new { area = "ORD" })', { orderId: orderId })
                .done(function (data) {
                    if (!data || data.error) { row.child('<div class="text-danger">查無訂單資料</div>').show(); return; }
                    let o = data.order || {};
                    let items = data.items || [];
                    let html = `
                        <div class="order-detail-card">
                            <h6>收件資訊</h6>
                            <p><strong>收件人：</strong>${o.receiverName ?? '-'}</p>
                            <p><strong>電話：</strong>${o.receiverPhone ?? '-'}</p>
                            <p><strong>地址：</strong>${o.receiverAddress ?? '-'}</p>
                            <p><strong>配送方式：</strong>${o.shippingMethod ?? '-'}</p>
                            <p><strong>出貨單號：</strong>${o.trackingNumber ?? '（設為已出貨後自動產生）'}</p>
                        </div>
                        <h6>商品明細</h6>
                        <table class="table table-sm table-bordered">
                            <thead><tr><th>商品</th><th>規格</th><th>單價</th><th>數量</th><th>小計</th></tr></thead>
                            <tbody>
                                ${items.map(i=>`
                                    <tr>
                                        <td>${i.productName}</td>
                                        <td>${i.skuSpec}</td>
                                        <td>${Number(i.unitPrice).toLocaleString()}</td>
                                        <td>${i.qty}</td>
                                        <td>${Number(i.subtotal).toLocaleString()}</td>
                                    </tr>`).join('')}
                            </tbody>
                        </table>
                        <div class="order-summary">
                            <p><strong>優惠券：</strong>${o.couponCode ?? '-'}</p>
                            <p><strong>優惠折扣：</strong>${Number(o.discountTotal ?? 0).toLocaleString()}</p>
                            <p><strong>運費：</strong>${Number(o.shippingFee ?? 0).toLocaleString()}</p>
                            <p><strong>總金額：</strong>${Number(o.totalAmount ?? 0).toLocaleString()}</p>
                        </div>`;
                    row.child(html).show();
                })
                .fail(() => row.child('<div class="text-danger">載入失敗</div>').show());
        }

        // ===== 分頁跳轉（沿用你的寫法）=====
        function goToPage(page) {
            if (isNaN(page)) return;
            if (page < 1) page = 1;
            if (page > @Model.Pagination.TotalPages) page = @Model.Pagination.TotalPages;

            var url = '@Url.Action("Index", "Orders", new { area = "ORD" })'
                + '?Keyword=@Model.SearchParams.Keyword'
                + '&PaymentStatus=@Model.SearchParams.PaymentStatus'
                + '&ShippingStatusId=@Model.SearchParams.ShippingStatusId'
                + '&OrderStatusId=@Model.SearchParams.OrderStatusId'
                + '&PageSize=@Model.SearchParams.PageSize'
                + '&PageNumber=' + page;

            window.location.href = url;
        }
        $("#jumpPageInput").on("keypress", function (e) { if (e.which === 13) { e.preventDefault(); goToPage(parseInt($(this).val())); } });
        $("#prevPage").on("click", function () { goToPage(parseInt($("#jumpPageInput").val()) - 1); });
        $("#nextPage").on("click", function () { goToPage(parseInt($("#jumpPageInput").val()) + 1); });

        // ===== 全選 & 取得勾選清單 =====
        $("#selectAll").on("click", function () { $(".row-check").prop("checked", this.checked); });
        function getSelectedOrders() {
            return $(".row-check:checked").map(function () { return $(this).val(); }).get();
        }
    </script>
}
