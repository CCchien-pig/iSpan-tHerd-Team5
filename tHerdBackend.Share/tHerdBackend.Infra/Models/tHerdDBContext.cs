// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace tHerdBackend.Infra.Models;

public partial class tHerdDBContext : DbContext
{
    public tHerdDBContext(DbContextOptions<tHerdDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<CsTicketHistory> CsTicketHistories { get; set; }

    public virtual DbSet<CsTicketMessage> CsTicketMessages { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<CsTicketHistory>(entity =>
        {
            entity.HasKey(e => e.HistoryId).HasName("PK__CS_Ticke__4D7B4ABD3A36D6FA");

            entity.ToTable("CS_TicketHistory", tb => tb.HasComment("客服工單歷程"));

            entity.HasIndex(e => e.ChangedDate, "IX_CS_TicketHistory_ChangedDate");

            entity.HasIndex(e => e.TicketId, "IX_CS_TicketHistory_TicketId");

            entity.Property(e => e.HistoryId).HasComment("歷程 ID");
            entity.Property(e => e.Action)
                .IsRequired()
                .HasMaxLength(50)
                .HasComment("動作名稱（建立 / 回覆 / 轉單 / 結案）");
            entity.Property(e => e.ChangedBy).HasComment("操作者 ID");
            entity.Property(e => e.ChangedDate)
                .HasDefaultValueSql("(sysutcdatetime())")
                .HasComment("異動時間 (UTC)");
            entity.Property(e => e.FromAssigneeId).HasComment("原負責客服");
            entity.Property(e => e.NewStatus).HasComment("新狀態");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasComment("備註說明");
            entity.Property(e => e.OldStatus).HasComment("原狀態");
            entity.Property(e => e.TicketId).HasComment("對應工單 ID");
            entity.Property(e => e.ToAssigneeId).HasComment("新負責客服");
        });

        modelBuilder.Entity<CsTicketMessage>(entity =>
        {
            entity.HasKey(e => e.MessageId).HasName("PK__CS_Ticke__C87C0C9C0D0B5D0E");

            entity.ToTable("CS_TicketMessage", tb => tb.HasComment("客服工單訊息"));

            entity.HasIndex(e => e.TicketId, "IX_CS_TicketMessage_TicketId");

            entity.Property(e => e.MessageId).HasComment("訊息 ID");
            entity.Property(e => e.AttachmentUrl)
                .HasMaxLength(200)
                .HasComment("附件路徑（可空）");
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(sysutcdatetime())")
                .HasComment("建立時間 (UTC)");
            entity.Property(e => e.MessageText)
                .IsRequired()
                .HasComment("訊息內容");
            entity.Property(e => e.SenderType).HasComment("發送者類型（1=客戶，2=客服）");
            entity.Property(e => e.TicketId).HasComment("所屬工單 ID");
        });
        modelBuilder.HasSequence("MemberRankIdSequence");
        modelBuilder.HasSequence<int>("UserNumberSequence").StartsAt(1001L);

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}