@using tHerdBackend.Core.DTOs
@model List<SysAssetFileDto>

<!-- ✅ 局部補 jQuery（若全域沒載入） -->
<script>
    if (typeof window.jQuery === "undefined") {
        document.write('<script src="https://code.jquery.com/jquery-3.6.4.min.js"><\/script>');
    }
</script>

<div class="modal fade" id="imageSelectorModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <div class="modal-content shadow-lg rounded-3 overflow-hidden">

            <!-- Header -->
            <div class="modal-header sticky-top bg-white border-bottom shadow-sm" style="z-index:10;">
                <h5 class="modal-title fw-bold">
                    <i class="bi bi-images me-2 text-primary"></i>選擇圖片
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>

            <!-- 搜尋 -->
            <div class="p-3 border-bottom sticky-top bg-light" style="z-index:9;">
                <div class="d-flex align-items-center gap-2 flex-wrap">
                    <div class="input-group input-group-sm" style="max-width: 260px;">
                        <input id="filterInput" type="text" class="form-control" placeholder="搜尋 AltText / Caption / 資料夾...">
                        <button id="btnClearFilter" class="btn btn-outline-secondary" title="清除搜尋"><i class="bi bi-x-circle"></i></button>
                    </div>

                    <div class="ms-auto d-flex gap-2">
                        <button type="button" id="btnClearSelection" class="btn btn-outline-danger btn-sm">
                            <i class="bi bi-x-lg"></i> 取消選取
                        </button>
                        <span id="selectedCount" class="badge bg-primary align-self-center">0 已選</span>
                    </div>
                </div>
            </div>

            <!-- 主體 -->
            <div class="modal-body p-4" style="max-height:70vh; overflow-y:auto;">
                <div id="imageGrid" class="text-center text-muted">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">載入中...</span>
                    </div>
                    <div>載入中...</div>
                </div>
            </div>

            <!-- Footer -->
            <div class="modal-footer d-flex justify-content-between align-items-center sticky-bottom bg-white border-top shadow-sm">
                <!-- 🔹 左側：上傳圖片 Modal -->
                <div class="d-flex align-items-center gap-2">
                    <button type="button"
                            class="btn btn-outline-primary btn-sm"
                            data-bs-toggle="modal"
                            data-bs-target="#uploadImageModal">
                        <i class="bi bi-upload"></i> 檔案上傳
                    </button>
                </div>

                <!-- 🔹 右側：操作按鈕群 -->
                <div class="d-flex align-items-center gap-2">
                    <button class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                    <button type="button" class="btn btn-primary" id="btnConfirmSelectImages">
                        <i class="bi bi-check-circle me-1"></i>確定選取
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- ✅ 上傳圖片 Modal 放在外層，不巢狀 -->
@await Component.InvokeAsync("UploadImageModal", new {
    moduleId = ViewContext.RouteData.Values["area"]?.ToString() ?? "SYS",
    progId = ViewContext.RouteData.Values["controller"]?.ToString() ?? "Images",
    modalId = "uploadImageModal"
})

<style>
    /* ✅ 圖片卡片樣式（selector-img-item） */
    .selector-img-item {
        position: relative;
        background: #fff;
        border-radius: 8px;
        overflow: hidden;
        transition: all 0.25s ease;
        cursor: pointer;
        margin: 4px; /* 🔹 每張圖之間加點空隙 */
        box-shadow: 0 0 4px rgba(0,0,0,0.08);
    }

        .selector-img-item:hover {
            box-shadow: 0 4px 12px rgba(13, 110, 253, 0.25);
            transform: translateY(-3px);
        }

        .selector-img-item.selected {
            outline: 3px solid #0d6efd;
            box-shadow: 0 0 12px rgba(13,110,253,0.4);
            transform: translateY(-2px) scale(1.01);
        }

        /* ✅ 讓圖片保持一致尺寸 */
        .selector-img-item img {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-bottom: 1px solid rgba(0,0,0,0.05);
        }

    /* ✅ 檔名標籤 */
    .selector-filename-label {
        position: absolute;
        left: 0;
        bottom: 0;
        width: 100%;
        color: #fff;
        background: rgba(0, 0, 0, 0.55);
        text-align: center;
        font-size: 13px;
        padding: 4px 6px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        border-bottom-left-radius: 8px;
        border-bottom-right-radius: 8px;
    }

    /* ✅ 整體網格容器增加 padding，避免貼邊 */
    #imageGrid {
        padding: 0.25rem 0.25rem 0.75rem 0.25rem;
    }

        /* ✅ 在各尺寸下保持良好間距 */
        #imageGrid .row {
            row-gap: 1rem !important; /* 類似 g-4 效果 */
            column-gap: 3rem !important;
        }
</style>

<script>
    let _onFileSelectConfirm = null;
    let _fileSelectModal = null;
    let _allData = [];
    let breadcrumbStack = [{ id: 0, name: "根目錄" }];
    let _currentModuleId = "SYS";
    let _currentProgId = "Images";

    // 🟦 開啟圖片選擇器
    window.openImageSelector = async function (onConfirm, moduleId = "SYS", progId = "Images", preSelectedIds = []) {
        _onFileSelectConfirm = onConfirm;
        _currentModuleId = moduleId;
        _currentProgId = progId;
        window._preSelectedIds = preSelectedIds || [];

        breadcrumbStack = [
            { id: 0, name: "根目錄" },
            { id: `${moduleId}/${progId}`, name: `${moduleId}/${progId}` }
        ];

        const modalEl = document.getElementById("imageSelectorModal");
        if (!_fileSelectModal) _fileSelectModal = new bootstrap.Modal(modalEl);

        await loadModuleImages(moduleId, progId);
        _fileSelectModal.show();
    };

    // ✅ 當上傳成功時，自動關閉上傳視窗、刷新圖片清單並回到選擇器
    document.addEventListener("upload-success", async function (e) {
        const moduleId = e.detail?.moduleId || "SYS";
        const progId = e.detail?.progId || "Images";

        try {
            showLoading("重新載入圖片中，請稍候...");

            await loadModuleImages(moduleId, progId);

            // 關閉上傳 Modal，回到選擇器
            const uploadModalEl = document.getElementById("uploadImageModal");
            const uploadModal = bootstrap.Modal.getInstance(uploadModalEl);
            if (uploadModal) uploadModal.hide();

            // 只有存在圖片選擇器時才顯示
            const selectorModalEl = document.getElementById("imageSelectorModal");
            if (selectorModalEl) {
                const selectorModal = bootstrap.Modal.getOrCreateInstance(selectorModalEl);
                selectorModal.show();
            }

        } catch (err) {
            console.error("❌ 無法刷新選擇器圖片：", err);
            Swal.fire("錯誤", "載入圖片時發生問題，請稍後再試。", "error");
        } finally {
            // ✅ 無論成功或失敗都關閉 Loading
            hideLoading();
        }
    });

    // 🖼️ 渲染圖片
    function renderFileGrid(data) {
        const grid = document.getElementById("imageGrid");

        // 沒資料時
        if (!data?.length) {
            grid.innerHTML = `<p class="text-muted">目前沒有任何資料。</p>`;
            return;
        }

        // 清空現有內容，但不重建容器
        grid.innerHTML = "";
        const row = document.createElement("div");
        row.className = "row row-cols-2 row-cols-sm-3 row-cols-md-4 row-cols-lg-5 g-3 justify-content-center";

        // 使用 DocumentFragment 減少 reflow
        const fragment = document.createDocumentFragment();

        for (const f of data) {
            const col = document.createElement("div");
            col.className = "col selector-img-item";
            col.dataset.id = f.fileId;
            col.dataset.url = f.fileUrl;
            col.dataset.alt = f.altText || "";
            col.dataset.caption = f.caption || "";

            // ✅ Lazy Load 圖片
            col.innerHTML = `
                <img src="${f.fileUrl}" alt="${f.altText || ""}"
                     loading="lazy"
                     class="w-100"
                     style="height:200px;object-fit:cover;">
                <div class="selector-filename-label">${f.altText || f.fileKey || ""}</div>
            `;

            fragment.appendChild(col);
        }

        row.appendChild(fragment);
        grid.appendChild(row);
    }

    // 🖱️ 點擊選取（改用 selector-img-item）
    $(document).on("click", ".selector-img-item", function () {
        $(this).toggleClass("selected");
        $("#selectedCount").text($(".selector-img-item.selected").length + " 已選");
    });

    // ❌ 清除選取
    $("#btnClearSelection").on("click", function () {
        $(".selector-img-item").removeClass("selected");
        $("#selectedCount").text("0 已選");
    });

    // ✅ 確定選取
    $("#btnConfirmSelectImages").on("click", function (e) {
        e.preventDefault();   // ✅ 阻止瀏覽器預設行為（避免觸發 form.submit）
        e.stopPropagation();  // ✅ 阻止事件冒泡到父層 form

        const selected = $(".selector-img-item.selected").map(function () {
            return {
                fileId: $(this).data("id"),
                fileUrl: $(this).data("url"),
                altText: $(this).data("alt") || "",
                caption: $(this).data("caption") || ""
            };
        }).get();

        // 🟢 通知父層（例如商品頁）回傳結果
        const event = new CustomEvent("images-selected", { detail: selected });
        document.dispatchEvent(event);

        if (typeof _onFileSelectConfirm === "function") {
            _onFileSelectConfirm(selected);
        }

        if (_fileSelectModal) _fileSelectModal.hide();
    });

    // 🟢 接收從圖片選擇器回傳的結果 → 通知父層負責畫面更新
    document.addEventListener("images-selected", function (e) {
        const selectedFiles = e.detail;

        // ❌ 不在這裡渲染圖片
        // ✅ 由父層 appendSelectedImages(selectedFiles) 去呼叫後端 _FileListPartial
    });


    // =======================================================
    // 🔍 即時搜尋篩選功能
    // =======================================================
    $(document).on("input", "#filterInput", function () {
        const keyword = $(this).val().trim().toLowerCase();
        const btnClear = $("#btnClearFilter");

        if (keyword === "") {
            // 若清空輸入框，就恢復全部資料
            renderFileGrid(_allData);
            btnClear.prop("disabled", true);
            return;
        }

        btnClear.prop("disabled", false);

        // 篩選邏輯：AltText、Caption、FileKey、Name 中有包含關鍵字者
        const filtered = _allData.filter(f => {
            const alt = (f.altText || "").toLowerCase();
            const caption = (f.caption || "").toLowerCase();
            const fileKey = (f.fileKey || "").toLowerCase();
            const name = (f.name || "").toLowerCase();
            return alt.includes(keyword) || caption.includes(keyword) || fileKey.includes(keyword) || name.includes(keyword);
        });

        renderFileGrid(filtered);
    });

    // ❌ 一鍵清除搜尋
    $(document).on("click", "#btnClearFilter", function () {
        $("#filterInput").val("");
        renderFileGrid(_allData);
        $(this).prop("disabled", true);
    });
</script>
